Return-Path: <linux-ppp+bounces-94-lists+linux-ppp=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-ppp@lfdr.de
Delivered-To: lists+linux-ppp@lfdr.de
Received: from ny.mirrors.kernel.org (ny.mirrors.kernel.org [147.75.199.223])
	by mail.lfdr.de (Postfix) with ESMTPS id 8C49E97DF02
	for <lists+linux-ppp@lfdr.de>; Sat, 21 Sep 2024 23:13:16 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ny.mirrors.kernel.org (Postfix) with ESMTPS id A1A0D1C2093B
	for <lists+linux-ppp@lfdr.de>; Sat, 21 Sep 2024 21:13:15 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id BA7B513C9B8;
	Sat, 21 Sep 2024 21:13:10 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=workingcode.com header.i=@workingcode.com header.b="RmwHJjOU"
X-Original-To: linux-ppp@vger.kernel.org
Received: from carlson.workingcode.com (carlson.workingcode.com [50.78.21.49])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 382C1143C5D
	for <linux-ppp@vger.kernel.org>; Sat, 21 Sep 2024 21:12:55 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=50.78.21.49
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1726953190; cv=none; b=HDHfya7bpGDYPj20/nH042wJoGeahEOuho8Gk2bbJ8FPYyowSG0rubEouamXqA/2PiJiIsV0NsziINjfiwVRdPw8B4G6HhCbKijXHOKiwgUr3+EySFldlIT/7juszKXPqVC8l6dBMBbepdUZ+76RNkEAJNCsJOZdv1vktf4GuhI=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1726953190; c=relaxed/simple;
	bh=ZmJOrlO+bngGjeiqFxCjs+qVJXKWK3RhdbqutvdhWLU=;
	h=Content-Type:Message-ID:Date:MIME-Version:To:From:Subject; b=XG5tGcurR+yNTk2fEaR4o8OZ15yNXpe3PqoRAXHQgIrZKFJdQsoQFeuI7DkjT6vCp+n/UtQV4LbYM6z3FMk2Cvx2I06MoKaNhKF2APGZVnPwrb9HXskv56EQjALAvdHM6NWPUwM4k0OVq01ukPLCv7dKYD95+bPsPhmEYRwZqWE=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=reject dis=none) header.from=workingcode.com; spf=pass smtp.mailfrom=workingcode.com; dkim=pass (2048-bit key) header.d=workingcode.com header.i=@workingcode.com header.b=RmwHJjOU; arc=none smtp.client-ip=50.78.21.49
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=reject dis=none) header.from=workingcode.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=workingcode.com
Received: from localhost (localhost [127.0.0.1])
	by carlson.workingcode.com (Postfix) with ESMTP id 1DF051E20804
	for <linux-ppp@vger.kernel.org>; Sat, 21 Sep 2024 17:04:55 -0400 (EDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=workingcode.com;
	 h=subject:subject:from:from:content-language:user-agent
	:mime-version:date:date:message-id:content-type:content-type
	:received:received; s=default; t=1726952690; x=1727816691; bh=Zm
	JOrlO+bngGjeiqFxCjs+qVJXKWK3RhdbqutvdhWLU=; b=RmwHJjOU0RBkmo3Iwn
	llP7N14DCJ94bdbqZ2PpP7o15F1csRzk6GGZEQhJpwc9pJmmhl7cVpmiAxGtbwUF
	yAuNha1RWOGmt07fV1Cw/Oun3A5vHUQ/FUX3tP4Q5NTRWY1TNEFpK64QHrr7aYxs
	E4H/DHBfXMGvDu+3N+Rxs2U1vCA+Q7WrksPSmuOkmRqzPxwQGPjIHyop4mORm/vC
	VQuhv3/ARajtY7lP/s4n+KaLOOk6YuSMNWqgJeiyIypZ9OKhFZMFNzEJKh42ccNg
	o9oAYcyWk15V3v9LeqPUmyxq4hfqooYkLUtq71dE2XehFzKOWx1bVCiWh+nnzcqa
	Xhkg==
X-Virus-Scanned: amavisd-new at workingcode.com
Received: from carlson.workingcode.com ([127.0.0.1])
	by localhost (carlson.workingcode.com [127.0.0.1]) (amavisd-new, port 10026)
	with ESMTP id LA618qPf4NiV for <linux-ppp@vger.kernel.org>;
	Sat, 21 Sep 2024 17:04:50 -0400 (EDT)
Received: from [50.78.21.49] (carlson [50.78.21.49])
	(using TLSv1.3 with cipher TLS_AES_128_GCM_SHA256 (128/128 bits)
	 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256)
	(No client certificate requested)
	by carlson.workingcode.com (Postfix) with ESMTPSA id 151A31E207FC
	for <linux-ppp@vger.kernel.org>; Sat, 21 Sep 2024 17:04:50 -0400 (EDT)
Content-Type: multipart/mixed; boundary="------------0950FvPPIyqbXUE0TK4CR5r1"
Message-ID: <c9ad04a2-e9ee-4953-afd6-9412711c4f35@workingcode.com>
Date: Sat, 21 Sep 2024 17:04:49 -0400
Precedence: bulk
X-Mailing-List: linux-ppp@vger.kernel.org
List-Id: <linux-ppp.vger.kernel.org>
List-Subscribe: <mailto:linux-ppp+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-ppp+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Content-Language: en-US
To: ppp Linux <linux-ppp@vger.kernel.org>
From: James Carlson <carlsonj@workingcode.com>
Subject: patch to bring Solaris back up to date

This is a multi-part message in MIME format.
--------------0950FvPPIyqbXUE0TK4CR5r1
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

The attached patch for review brings the Solaris support back up to
date. Here is a summary of the changes it contains:

- Updated readmes
- Disabled MPPE support for Solaris
- Fixed compilation error in ccp.c with MPPE disabled
- Use OS-provided drivers and associated include files
- Tested on OpenIndiana Hipster (Illumos)

-- 
James Carlson     42.703N 71.076W FN42lq08    <carlsonj@workingcode.com>
--------------0950FvPPIyqbXUE0TK4CR5r1
Content-Type: text/plain; charset=UTF-8; name="ppp-patch.txt"
Content-Disposition: attachment; filename="ppp-patch.txt"
Content-Transfer-Encoding: base64

ZGlmZiAtLWdpdCBhL1JFQURNRSBiL1JFQURNRQppbmRleCA1ZDI1ZjNjLi40M2M0NTU1IDEw
MDY0NAotLS0gYS9SRUFETUUKKysrIGIvUkVBRE1FCkBAIC0zNSw2ICszNSwxMiBAQCBMaW51
eCBkaXN0cmlidXRpb25zLiAgVGhlIExpbnV4IGtlcm5lbCBjb2RlIHN1cHBvcnRzIHVzaW5n
IFBQUCBvdmVyCiB0aGluZ3Mgb3RoZXIgdGhhbiBzZXJpYWwgcG9ydHMsIHN1Y2ggYXMgUFBQ
IG92ZXIgRXRoZXJuZXQgYW5kIFBQUCBvdmVyCiBBVE0uCiAKK1NpbWlsYXJseSwgdGhlIGtl
cm5lbCBjb2RlIGZvciBTb2xhcmlzIGlzIG5vIGxvbmdlciBkaXN0cmlidXRlZCB3aXRoCit0
aGlzIHBhY2thZ2UuICBTZWUgdGhlIElsbHVtb3Mgd2ViIHNpdGUgZm9yIHBvaW50ZXJzIHRv
IHRoZSBrZXJuZWwKK21vZHVsZSBzb3VyY2UgY29kZSBhbmQgYnVpbGQgZW52aXJvbm1lbnQu
CisKKyAgaHR0cHM6Ly93d3cuaWxsdW1vcy5vcmcvCisKIAogSW5zdGFsbGF0aW9uLgogKioq
KioqKioqKioqKgpAQCAtMTcyLDcgKzE3OCw3IEBAIHRvIGxpbnV4LXBwcEB2Z2VyLmtlcm5l
bC5vcmcsIG9yIHJlcG9ydCB0aGVtIHRvIHRoZSBtYWludGFpbmVyIGZvciB0aGUKIHBvcnQg
Zm9yIHRoZSBvcGVyYXRpbmcgc3lzdGVtIHlvdSBhcmUgdXNpbmc6CiAKIExpbnV4CQkJUGF1
bCBNYWNrZXJyYXMgPHBhdWx1c0BvemxhYnMub3JnPgotU29sYXJpcwkJCUphbWVzIENhcmxz
b24gPGNhcmxzb25Ad29ya2luZ2NvZGUuY29tPgorU29sYXJpcwkJCUphbWVzIENhcmxzb24g
PGNhcmxzb25qQHdvcmtpbmdjb2RlLmNvbT4KIAogCiBDb3B5cmlnaHRzOgpkaWZmIC0tZ2l0
IGEvUkVBRE1FLnNvbDIgYi9SRUFETUUuc29sMgppbmRleCBiZjdmNmViLi4wNTkwMWVkIDEw
MDY0NAotLS0gYS9SRUFETUUuc29sMgorKysgYi9SRUFETUUuc29sMgpAQCAtMSwyMTUgKzEs
NjkgQEAKLU5PVEU6IFRoZXNlIGluc3RydWN0aW9ucyBhcmUgb3V0IG9mIGRhdGUuCi0KLVRo
aXMgZmlsZSBkZXNjcmliZXMgdGhlIGluc3RhbGxhdGlvbiBwcm9jZXNzIGZvciBwcHAtMi40
IG9uIHN5c3RlbXMKLXJ1bm5pbmcgU29sYXJpcy4gIFRoZSBTb2xhcmlzIGFuZCBTVlI0IHBv
cnRzIHNoYXJlIGEgbG90IG9mIGNvZGUgYnV0Ci1hcmUgbm90IGlkZW50aWNhbC4gIFRoZSBT
VFJFQU1TIGtlcm5lbCBtb2R1bGVzIGFuZCBkcml2ZXIgZm9yIFNvbGFyaXMKLWFyZSBpbiB0
aGUgc29sYXJpcyBkaXJlY3RvcnkgKGFuZCB1c2Ugc29tZSBjb2RlIGZyb20gdGhlIG1vZHVs
ZXMKLWRpcmVjdG9yeSkuCi0KLU5PVEU6IEFsdGhvdWdoIHRoZSBrZXJuZWwgZHJpdmVyIGFu
ZCBtb2R1bGVzIGhhdmUgYmVlbiBkZXNpZ25lZCB0bwotb3BlcmF0ZSBjb3JyZWN0bHkgb24g
U01QIHN5c3RlbXMsIHRoZXkgaGF2ZSBub3QgYmVlbiBleHRlbnNpdmVseQotdGVzdGVkIG9u
IFNNUCBtYWNoaW5lcy4gIFNvbWUgdXNlcnMgb2YgU01QIFNvbGFyaXMgeDg2IHN5c3RlbXMg
aGF2ZQotcmVwb3J0ZWQgc3lzdGVtIHByb2JsZW1zIGFwcGFyZW50bHkgbGlua2VkIHRvIHRo
ZSB1c2Ugb2YgcHJldmlvdXMKLXZlcnNpb25zIG9mIHRoaXMgc29mdHdhcmUuICBJIGJlbGll
dmUgdGhlc2UgcHJvYmxlbXMgaGF2ZSBiZWVuIGZpeGVkLgotCi0KLUluc3RhbGxhdGlvbi4K
K0ludHJvZHVjdGlvbi4KICoqKioqKioqKioqKioKIAotMS4gUnVuIHRoZSBjb25maWd1cmUg
c2NyaXB0IGFuZCBtYWtlIHRoZSB1c2VyLWxldmVsIHByb2dyYW1zIGFuZCB0aGUKLSAgIGtl
cm5lbCBtb2R1bGVzLgotCi0JLi9jb25maWd1cmUKLQltYWtlCi0KLSAgICBUaGUgY29uZmln
dXJlIHNjcmlwdCB3aWxsIGF1dG9tYXRpY2FsbHkgZmluZCBTdW4ncyBjYyBpZiBpdCdzIGlu
Ci0gICAgdGhlIHN0YW5kYXJkIGxvY2F0aW9uICgvb3B0L1NVTldzcHJvL2Jpbi9jYykuICBJ
ZiB5b3UgZG8gbm90IGhhdmUKLSAgICBTdW4ncyBXb3JrU2hvcCBjb21waWxlciwgY29uZmln
dXJlIHdpbGwgYXR0ZW1wdCB0byB1c2UgJ2djYycuICBJZgotICAgIHRoaXMgaXMgZm91bmQg
YW5kIHlvdSBoYXZlIGEgNjQgYml0IGtlcm5lbCwgaXQgd2lsbCBjaGVjayB0aGF0IGdjYwot
ICAgIGFjY2VwdHMgdGhlICItbTY0IiBvcHRpb24sIHdoaWNoIGlzIHJlcXVpcmVkIHRvIGJ1
aWxkIGtlcm5lbAotICAgIG1vZHVsZXMuCi0KLSAgICBZb3Ugc2hvdWxkIG5vdCBoYXZlIHRv
IGVkaXQgdGhlIE1ha2VmaWxlcyBmb3IgbW9zdCBvcmRpbmFyeSBjYXNlcy4KLQotMi4gSW5z
dGFsbCB0aGUgcHJvZ3JhbXMgYW5kIGtlcm5lbCBtb2R1bGVzOiBhcyByb290LCBkbwotCi0J
bWFrZSBpbnN0YWxsCi0KLSAgICBUaGlzIGluc3RhbGxzIHBwcGQsIGNoYXQgYW5kIHBwcHN0
YXRzIGluIC91c3IvbG9jYWwvYmluIGFuZCB0aGUKLSAgICBrZXJuZWwgbW9kdWxlcyBpbiAv
a2VybmVsL2RydiBhbmQgL2tlcm5lbC9zdHJtb2QsIGFuZCBjcmVhdGVzIHRoZQotICAgIC9l
dGMvcHBwIGRpcmVjdG9yeSBhbmQgcG9wdWxhdGVzIGl0IHdpdGggZGVmYXVsdCBjb25maWd1
cmF0aW9uCi0gICAgZmlsZXMuICBZb3UgY2FuIGNoYW5nZSB0aGUgaW5zdGFsbGF0aW9uIGRp
cmVjdG9yaWVzIGJ5IGVkaXRpbmcKLSAgICBzb2xhcmlzL01ha2VkZWZzLiAgSWYgeW91IGhh
dmUgYSA2NCBiaXQga2VybmVsLCB0aGUgNjQtYml0IGRyaXZlcnMKLSAgICBhcmUgaW5zdGFs
bGVkIGluIC9rZXJuZWwvZHJ2L3NwYXJjdjkgYW5kIC9rZXJuZWwvc3RybW9kL3NwYXJjdjku
Ci0KLSAgICBJZiB5b3VyIHN5c3RlbSBub3JtYWxseSBoYXMgb25seSBvbmUgbmV0d29yayBp
bnRlcmZhY2UgYXQgYm9vdAotICAgIHRpbWUsIHRoZSBkZWZhdWx0IFNvbGFyaXMgc3lzdGVt
IHN0YXJ0dXAgc2NyaXB0cyB3aWxsIGRpc2FibGUgSVAKLSAgICBmb3J3YXJkaW5nIGluIHRo
ZSBJUCBrZXJuZWwgbW9kdWxlLiAgVGhpcyB3aWxsIHByZXZlbnQgdGhlIHJlbW90ZQotICAg
IG1hY2hpbmUgZnJvbSB1c2luZyB0aGUgbG9jYWwgbWFjaGluZSBhcyBhIGdhdGV3YXkgdG8g
YWNjZXNzIG90aGVyCi0gICAgaG9zdHMuICBUaGUgc29sdXRpb24gaXMgdG8gY3JlYXRlIGFu
IC9ldGMvcHBwL2lwLXVwIHNjcmlwdAotICAgIGNvbnRhaW5pbmcgc29tZXRoaW5nIGxpa2Ug
dGhpczoKLQotCSMhL2Jpbi9zaAotCS91c3Ivc2Jpbi9uZGQgLXNldCAvZGV2L2lwIGlwX2Zv
cndhcmRpbmcgMQotCi0gICAgU2VlIHRoZSBtYW4gcGFnZSBmb3IgaXAoN3ApIGZvciBkZXRh
aWxzLgotCi1JbnRlZ3JhdGVkIHBwcGQKLSoqKioqKioqKioqKioqKgorICBUaGlzIGZpbGUg
ZGVzY3JpYmVzIHRoZSBpbnN0YWxsYXRpb24gcHJvY2VzcyBmb3IgcHBwLTIuNSBvbiBzeXN0
ZW1zCisgIHJ1bm5pbmcgYW4gT3BlblNvbGFyaXMtZGVyaXZlZCBPUywgc3VjaCBhcyBJbGx1
bW9zIG9yIE9wZW5JbmRpYW5hLgorICBGb3IgdGhlc2Ugc3lzdGVtcywgdGhlIFNUUkVBTVMg
a2VybmVsIG1vZHVsZXMgYXJlIHN1cHBsaWVkIHdpdGggdGhlCisgIE9TIGl0c2VsZiBhbmQg
YXJlIHVzZWQgYXMtaXMgYnkgdGhpcyBkaXN0cmlidXRpb24uIEZvciBtb3JlCisgIGluZm9y
bWF0aW9uIG9uIHRoZXNlIGRpc3RyaWJ1dGlvbnMgKGluY2x1ZGluZyBrZXJuZWwgc291cmNl
KSBzZWU6CiAKLSAgU29sYXJpcyA4IDA3LzAxIChVcGRhdGUgNSkgYW5kIGxhdGVyIGhhdmUg
YW4gaW50ZWdyYXRlZCB2ZXJzaW9uIG9mCi0gIHBwcGQsIGtub3duIGFzICJTb2xhcmlzIFBQ
UCA0LjAsIiBhbmQgaXMgYmFzZWQgb24gcHBwLTIuNC4wLiAgVGhpcwotICB2ZXJzaW9uIGNv
bWVzIHdpdGggdGhlIHN0YW5kYXJkIFNvbGFyaXMgc29mdHdhcmUgZGlzdHJpYnV0aW9uIGFu
ZCBpcwotICBzdXBwb3J0ZWQgYnkgU3VuLiAgSXQgaXMgZnVsbHkgdGVzdGVkIGluIDY0LWJp
dCBhbmQgU01QIG1vZGVzLCBhbmQKLSAgd2l0aCBidW5kbGVkIGFuZCB1bmJ1bmRsZWQgc3lu
Y2hyb25vdXMgZHJpdmVycy4gIFNvbGFyaXMgOCAxMC8wMQotICAoVXBkYXRlIDYpIGFuZCBs
YXRlciBpbmNsdWRlcyBpbnRlZ3JhdGVkIFBQUG9FIGNsaWVudCBhbmQgc2VydmVyCi0gIHN1
cHBvcnQsIHdpdGgga2VybmVsLXJlc2lkZW50IGRhdGEgaGFuZGxpbmcuICBTZWUgcHBwZCgx
TSkuCisgICAgaHR0cHM6Ly93d3cuaWxsdW1vcy5vcmcvCisgICAgaHR0cHM6Ly9pbGx1bW9z
Lm9yZy9kb2NzL2Fib3V0L2Rpc3Ryby8KIAotICBUaGUgZmVhdHVyZSBpcyBwYXJ0IG9mIHRo
ZSByZWd1bGFyIGZ1bGwgaW5zdGFsbGF0aW9uLCBhbmQgaXMKLSAgcHJvdmlkZWQgYnkgdGhl
c2UgcGFja2FnZXM6CisgIEZvciBPcmFjbGUgU29sYXJpcyBzeXN0ZW1zLCBlaXRoZXIgdXNl
IHRoZSB2ZW5kb3Itc3VwcGxpZWQgUFBQCisgIGltcGxlbWVudGF0aW9uICgiU29sYXJpcyBQ
UFAgNC4wIiBiYXNlZCBvbiBwcHBkLTIuNC4wKSwgb3IgZG93bmxvYWQKKyAgYW4gb2xkZXIg
dmVyc2lvbiBvZiB0aGUgcHBwZCBzb3VyY2VzIGhlcmU6CiAKLQlTVU5XcHBwZAktIDMyLWJp
dCBtb2RlIGtlcm5lbCBkcml2ZXJzCi0JU1VOV3BwcGRyCS0gcm9vdC1yZXNpZGVudCAvZXRj
L3BwcCBjb25maWcgc2FtcGxlcwotCVNVTldwcHBkdQktIC91c3IvYmluL3BwcGQgaXRzZWxm
LCBwbHVzIGNoYXQKLQlTVU5XcHBwZHgJLSA2NC1iaXQgbW9kZSBrZXJuZWwgZHJpdmVycwot
CVNVTldwcHBkdAktIFBQUG9FIHN1cHBvcnQKLQlTVU5XcHBwZwktIEdQTCdkIG9wdGlvbmFs
ICdwcHBkdW1wJyBhbmQgcGx1Z2lucwotCVNVTldwcHBnUwktIFNvdXJjZSBmb3IgR1BMJ2Qg
b3B0aW9uYWwgZmVhdHVyZXMKKyAgICBodHRwczovL2Rvd25sb2FkLnNhbWJhLm9yZy9wdWIv
cHBwLwogCi0gIFVzZSB0aGUgb3BlbiBzb3VyY2UgdmVyc2lvbiBvZiBwcHBkIGlmIHlvdSB3
aXNoIHRvIHJlY29tcGlsZSB0byBhZGQKLSAgbmV3IGZlYXR1cmVzIG9yIHRvIGV4cGVyaW1l
bnQgd2l0aCB0aGUgY29kZS4gIFByb2R1Y3Rpb24gc3lzdGVtcywKLSAgaG93ZXZlciwgc2hv
dWxkIHJ1biB0aGUgU3VuLXN1cHBsaWVkIHZlcnNpb24sIGlmIGF0IGFsbCBwb3NzaWJsZS4K
KyAgVGhlIGxhc3QgdmVyc2lvbiBrbm93biB0byBjb21waWxlIGFuZCBydW4gY29ycmVjdGx5
IG9uIE9yYWNsZQorICBTb2xhcmlzIDEwIGlzIHBwcGQtMi40LjguIEl0IG1heSBiZSBwb3Nz
aWJsZSB0byBjb21waWxlIGFuZCB1c2UKKyAgbmV3ZXIgdmVyc2lvbnMgb24gZWl0aGVyIFNv
bGFyaXMgMTEgb3IgYnkgaW5zdGFsbGluZyB0aGlyZC1wYXJ0eQorICBjb21waWxlcnM7IHRo
aXMgaGFzIG5vdCBiZWVuIHRlc3RlZC4KIAotICBZb3UgY2FuIHJ1biBib3RoIHZlcnNpb25z
IG9uIGEgc2luZ2xlIHN5c3RlbSBpZiB5b3Ugd2lzaC4gIFRoZQotICBTb2xhcmlzIFBQUCA0
LjAgaW50ZXJmYWNlcyBhcmUgbmFtZWQgInNwcHBOLCIgd2hpbGUgdGhpcyBvcGVuIHNvdXJj
ZQotICB2ZXJzaW9uIG5hbWVzIGl0cyBpbnRlcmZhY2VzIGFzICJwcHBOIi4gIFRoZSBTVFJF
QU1TIG1vZHVsZXMgYXJlCi0gIHNpbWlsYXJseSBzZXBhcmF0ZWQuICBUaGUgU3VuLXN1cHBs
aWVkIHBwcGQgbGl2ZXMgaW4gL3Vzci9iaW4vcHBwZCwKLSAgd2hpbGUgdGhlIG9wZW4gc291
cmNlIHZlcnNpb24gaW5zdGFsbHMgKGJ5IGRlZmF1bHQpIGluCi0gIC91c3IvbG9jYWwvYmlu
L3BwcGQuCiAKLUR5bmFtaWMgU1RSRUFNUyBSZS1QbHVtYmluZyBTdXBwb3J0LgotKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0KLSAgU29sYXJpcyA4IChhbmQgbGF0
ZXIpIGluY2x1ZGVzIGR5bmFtaWMgcmUtcGx1bWJpbmcgc3VwcG9ydC4gIFdpdGgKLSAgdGhp
cyBmZWF0dXJlLCBtb2R1bGVzIGJlbG93IGlwIGNhbiBiZSBpbnNlcnRlZCwgb3IgcmVtb3Zl
ZCwgd2l0aG91dAotICBoYXZpbmcgdGhlIGlwIHN0cmVhbSBiZSB1bnBsdW1iZWQsIGFuZCBy
ZS1wbHVtYmVkIGFnYWluLiAgQWxsIHN0YXRlCi0gIGluIGlwIGZvciB0aGUgaW50ZXJmYWNl
IHdpbGwgYmUgcHJlc2VydmVkIGFzIG1vZHVsZXMgYXJlIGFkZGVkIG9yCi0gIHJlbW92ZWQu
ICBVc2VycyBjYW4gaW5zdGFsbCAob3IgdXBncmFkZSkgbW9kdWxlcyBzdWNoIGFzIGZpcmV3
YWxsLAotICBiYW5kd2lkdGggbWFuYWdlciwgY2FjaGUgbWFuYWdlciwgdHVubmVsaW5nLCBl
dGMuLCB3aXRob3V0IHNodXR0aW5nCi0gIHRoZSBpbnRlcmZhY2UgZG93bi4KLQotICBUbyBz
dXBwb3J0IHRoaXMsIHBwcCBkcml2ZXIgbm93IHVzZXMgL2Rldi91ZHAgaW5zdGVhZCBvZiAv
ZGV2L2lwIGZvcgotICB0aGUgaXAgc3RyZWFtLiBUaGUgaW50ZXJmYWNlIHN0cmVhbSAod2hl
cmUgaXAgbW9kdWxlIHB1c2hlZCBvbiB0b3AKLSAgb2YgcHBwKSBpcyB0aGVuIElfUExJTksn
ZWQgYmVsb3cgdGhlIGlwIHN0cmVhbS4gL2Rldi91ZHAgaXMgdXNlZAotICBiZWNhdXNlIFNU
UkVBTVMgd2lsbCBub3QgbGV0IGEgZHJpdmVyIGJlIFBMSU5LJ2VkIHVuZGVyIGl0c2VsZiwg
YW5kCi0gIC9kZXYvaXAgaXMgdHlwaWNhbGx5IHRoZSBkcml2ZXIgYXQgdGhlIGJvdHRvbSBv
ZiB0aGUgdHVubmVsaW5nCi0gIGludGVyZmFjZXMgc3RyZWFtLiAgVGhlIG11eCBpZHMgb2Yg
dGhlIGlwIHN0cmVhbXMgYXJlIHRoZW4gYWRkZWQKLSAgdXNpbmcgU0lPQ1N4SUZNVVhJRCBp
b2N0bC4KLQotICBVc2VycyB3aWxsIGJlIGFibGUgdG8gc2VlIHRoZSBtb2R1bGVzIG9uIHRo
ZSBpbnRlcmZhY2Ugc3RyZWFtIGJ5LAotICBmb3IgZXhhbXBsZToKLQotICAgIHBpa2Fwb24j
IGlmY29uZmlnIHBwcCBtb2RsaXN0Ci0gICAgMCBpcAotICAgIDEgcHBwCi0KLSAgT3IgYXJi
aXRyYXJpbHkgaWYgYmFuZHdpZHRoIG1hbmFnZXIgYW5kIGZpcmV3YWxsIG1vZHVsZXMgYXJl
IGluc3RhbGxlZDoKLQotICAgIHBpa2Fwb24jIGlmY29uZmlnIGhtZTAgbW9kbGlzdAotICAg
IDAgYXJwCi0gICAgMSBpcAotICAgIDIgaXBxb3MKLSAgICAzIGZpcmV3YWxsCi0gICAgNCBo
bWUKLQotU25vb3AgU3VwcG9ydC4KLSoqKioqKioqKioqKioqCi0KLSAgVGhpcyB2ZXJzaW9u
IGluY2x1ZGVzIHN1cHBvcnQgZm9yIC91c3Ivc2Jpbi9zbm9vcC4gIFRlc3RzIGhhdmUgYmVl
bgotICBkb25lIG9uIFNvbGFyaXMgNyB0aHJvdWdoIDkuIE9ubHkgSVB2NCBhbmQgSVB2NiBw
YWNrZXRzIHdpbGwgYmUgc2VudAotICB1cCB0byBzdHJlYW0ocykgbWFya2VkIGFzIHByb21p
c2N1b3VzIChpLmUuLCB0aG9zZSB1c2VkIGJ5IHNub29wKS4KLQotICBVc2VycyB3aWxsIGJl
IGFibGUgdG8gc2VlIHRoZSBwYWNrZXRzIG9uIHRoZSBwcHAgaW50ZXJmYWNlIGJ5LCBmb3IK
LSAgZXhhbXBsZToKLQotICAgIHNub29wIC1kIHBwcDAKLQotICBTZWUgdGhlIG1hbiBwYWdl
IGZvciBzbm9vcCgxTSkgZm9yIGRldGFpbHMuCi0KLUlQdjYgU3VwcG9ydC4KK0luc3RhbGxh
dGlvbi4KICoqKioqKioqKioqKioKIAotICBUaGlzIGlzIGZvciBTb2xhcmlzIDggYW5kIGxh
dGVyLgotCi0gIFRoaXMgdmVyc2lvbiBoYXMgYmVlbiB0ZXN0ZWQgdW5kZXIgU29sYXJpcyA4
IGFuZCA5IHJ1bm5pbmcgSVB2Ni4KLSAgSW50ZXJvcGVyYWJpbGl0eSB0ZXN0aW5nIGhhcyBv
bmx5IGJlZW4gZG9uZSBiZXR3ZWVuIFNvbGFyaXMgbWFjaGluZXMKLSAgaW4gdGVybXMgb2Yg
dGhlIElQVjYgTkNQLiAgQW4gYWRkaXRpb25hbCBjb21tYW5kIGxpbmUgb3B0aW9uIGZvciB0
aGUKLSAgcHBwZCBkYWVtb24gaGFzIGJlZW4gYWRkZWQ6IGlwdjZjcC11c2UtcGVyc2lzdGVu
dC4KKzEuIE1ha2Ugc3VyZSB5b3UgaGF2ZSBhIHN1aXRhYmxlIGNvbXBpbGVyIGluc3RhbGxl
ZC4gVGhpcyBwYWNrYWdlIHdhcworICAgdGVzdGVkIHdpdGggInBrZyBpbnN0YWxsIGdjYy0x
NCIgYnV0IG90aGVyIG1vZGVybiBjb21waWxlcnMgc2hvdWxkCisgICB3b3JrLgogCi0gIEJ5
IGRlZmF1bHQsIGNvbXBpbGF0aW9uIGZvciBJUHY2IHN1cHBvcnQgaXMgbm90IGVuYWJsZWQu
ICBVbmNvbW1lbnQKLSAgdGhlIG5lY2Vzc2FyeSBsaW5lcyBpbiBwcHBkL01ha2VmaWxlLnNv
bDIgdG8gZW5hYmxlIGl0LiAgT25jZSBkb25lLAotICB0aGUgcXVpY2tlc3Qgd2F5IHRvIGdl
dCBJUHY2IHJ1bm5pbmcgaXMgdG8gYWRkIHRoZSBmb2xsb3dpbmcKLSAgc29tZXdoZXJlIGlu
IHRoZSBjb21tYW5kIGxpbmUgb3B0aW9uOgorMi4gUnVuIHRoZSBjb25maWd1cmUgc2NyaXB0
IGFuZCBidWlsZCB0aGUgcGFja2FnZS4KIAotCStpcHY2IGlwdjZjcC11c2UtcGVyc2lzdGVu
dAorICAgICAuL2NvbmZpZ3VyZSAtLXdpdGgtcnVudGltZS1kaXI9L3Zhci9ydW4gLS13aXRo
LWxvZ2ZpbGUtZGlyPS92YXIvbG9nL3BwcAorICAgICBtYWtlCiAKLSAgVGhlIHBlcnNpc3Rl
bnQgaWQgZm9yIHRoZSBsaW5rLWxvY2FsIGFkZHJlc3Mgd2FzIGFkZGVkIHRvIGNvbmZvcm0g
dG8KLSAgUkZDIDI0NzI7IHN1Y2ggdGhhdCBpZiB0aGVyZSdzIGFuIEVVSS00OCBhdmFpbGFi
bGUsIHVzZSB0aGF0IHRvIG1ha2UKLSAgdXAgdGhlIEVVSS02NC4gIEFzIG9mIG5vdywgdGhl
IFNvbGFyaXMgaW1wbGVtZW50YXRpb24gZXh0cmFjdHMgdGhlCi0gIEVVSS00OCBpZCBmcm9t
IHRoZSBFdGhlcm5ldCdzIE1BQyBhZGRyZXNzICh0aGUgZXRoZXJuZXQgaW50ZXJmYWNlCi0g
IG5lZWRzIHRvIGJlIHVwKS4gIEZ1dHVyZSB3b3JrIG1pZ2h0IHN1cHBvcnQgb3RoZXIgd2F5
cyBvZiBvYnRhaW5pbmcKLSAgYSB1bmlxdWUgeWV0IHBlcnNpc3RlbnQgaWQsIHN1Y2ggYXMg
RUVQUk9NIHNlcmlhbCBudW1iZXJzLCBldGMuCisgICBUaGUgY29uZmlndXJlIHNjcmlwdCB3
aWxsIGF1dG9tYXRpY2FsbHkgZmluZCB0aGUgY29tcGlsZXIgaWYgaXQncyBpbgorICAgdGhl
IHN0YW5kYXJkIGxvY2F0aW9uICgvdXNyL2Jpbi9nY2MpLiBCeSBkZWZhdWx0LCBldmVyeXRo
aW5nIHdpbGwgYmUKKyAgIGluc3RhbGxlZCBpbiAvdXNyL2xvY2FsLiBVc2UgIi0tcHJlZml4
IiB0byBjaG9vc2UgYSBkaWZmZXJlbnQKKyAgIGluc3RhbGxhdGlvbiBkaXJlY3RvcnkgaWYg
ZGVzaXJlZC4gVXNlICIuL2NvbmZpZ3VyZSAtaCIgdG8gc2VlIG90aGVyCisgICBvcHRpb25z
LgogCi0gIFRoZXJlIG5lZWQgbm90IGJlIGFueSB1cC9kb3duIHNjcmlwdHMgZm9yIGlwdjYs
Ci0gIGUuZy4gL2V0Yy9wcHAvaXB2Ni11cCBvciAvZXRjL3BwcC9pcHY2LWRvd24sIHRvIHRy
aWdnZXIgSVB2NgotICBuZWlnaGJvciBkaXNjb3ZlcnkgZm9yIGF1dG8gY29uZmlndXJhdGlv
biBhbmQgcm91dGluZy4gIFRoZSBpbi5uZHBkCi0gIGRhZW1vbiB3aWxsIHBlcmZvcm0gYWxs
IG9mIHRoZSBuZWNlc3Nhcnkgam9icyBpbiB0aGUKLSAgYmFja2dyb3VuZC4gL2V0Yy9pbmV0
L25kcGQuY29uZiBjYW4gYmUgZnVydGhlciBjdXN0b21pemVkIHRvIGVuYWJsZQotICB0aGUg
bWFjaGluZSBhcyBhbiBJUHY2IHJvdXRlci4gU2VlIHRoZSBtYW4gcGFnZSBmb3IgaW4ubmRw
ZCgxTSkgYW5kCi0gIG5kcGQuY29uZig0KSBmb3IgZGV0YWlscy4KKzMuIEluc3RhbGwgdGhl
IHByb2dyYW1zLgogCi0gIEJlbG93IGlzIGEgc2FtcGxlIG91dHB1dCBvZiAiaWZjb25maWcg
LWEiIHdpdGggcGVyc2lzdGVudCBsaW5rLWxvY2FsCi0gIGFkZHJlc3MuICBOb3RlIHRoZSBV
Tk5VTUJFUkVEIGZsYWcgaXMgc2V0IGJlY2F1c2UgaG1lMCBhbmQgcHBwMCBib3RoCi0gIGhh
dmUgaWRlbnRpY2FsIGxpbmstbG9jYWwgSVB2NiBhZGRyZXNzZXM6CisgICAgIHN1ZG8gbWFr
ZSBpbnN0YWxsCiAKLWxvMDogZmxhZ3M9MTAwMDg0OTxVUCxMT09QQkFDSyxSVU5OSU5HLE1V
TFRJQ0FTVCxJUHY0PiBtdHUgODIzMiBpbmRleCAxCi0gICAgICAgIGluZXQgMTI3LjAuMC4x
IG5ldG1hc2sgZmYwMDAwMDAgCi1obWUwOiBmbGFncz0xMDAwODQzPFVQLEJST0FEQ0FTVCxS
VU5OSU5HLE1VTFRJQ0FTVCxJUHY0PiBtdHUgMTUwMCBpbmRleCAyCi0gICAgICAgIGluZXQg
MTI5LjE0Ni44Ni4yNDggbmV0bWFzayBmZmZmZmYwMCBicm9hZGNhc3QgMTI5LjE0Ni44Ni4y
NTUKLSAgICAgICAgZXRoZXIgODowOjIwOjhkOjM4OmMxIAotbG8wOiBmbGFncz0yMDAwODQ5
PFVQLExPT1BCQUNLLFJVTk5JTkcsTVVMVElDQVNULElQdjY+IG10dSA4MjUyIGluZGV4IDEK
LSAgICAgICAgaW5ldDYgOjoxLzEyOCAKLWhtZTA6IGZsYWdzPTIwMDA4NDE8VVAsUlVOTklO
RyxNVUxUSUNBU1QsSVB2Nj4gbXR1IDE1MDAgaW5kZXggMgotICAgICAgICBldGhlciA4OjA6
MjA6OGQ6Mzg6YzEgCi0gICAgICAgIGluZXQ2IGZlODA6OmEwMDoyMGZmOmZlOGQ6MzhjMS8x
MCAKLWhtZTA6MTogZmxhZ3M9MjA4MDg0MTxVUCxSVU5OSU5HLE1VTFRJQ0FTVCxBRERSQ09O
RixJUHY2PiBtdHUgMTUwMCBpbmRleCAyCi0gICAgICAgIGluZXQ2IGZlYzA6OjU2OmEwMDoy
MGZmOmZlOGQ6MzhjMS82NCAKLWhtZTA6MjogZmxhZ3M9MjA4MDg0MTxVUCxSVU5OSU5HLE1V
TFRJQ0FTVCxBRERSQ09ORixJUHY2PiBtdHUgMTUwMCBpbmRleCAyCi0gICAgICAgIGluZXQ2
IDIwMDA6OjU2OmEwMDoyMGZmOmZlOGQ6MzhjMS82NCAKLWhtZTA6MzogZmxhZ3M9MjA4MDg0
MTxVUCxSVU5OSU5HLE1VTFRJQ0FTVCxBRERSQ09ORixJUHY2PiBtdHUgMTUwMCBpbmRleCAy
Ci0gICAgICAgIGluZXQ2IDI6OjU2OmEwMDoyMGZmOmZlOGQ6MzhjMS82NCAKLXBwcDA6IGZs
YWdzPTEwMDA4ZDE8VVAsUE9JTlRPUE9JTlQsUlVOTklORyxOT0FSUCxNVUxUSUNBU1QsSVB2
ND4gbXR1IDE1MDAgaW5kZXggMTIKLSAgICAgICAgaW5ldCAxNzIuMTYuMS4xIC0tPiAxNzIu
MTYuMS4yIG5ldG1hc2sgZmZmZmZmMDAgCi1wcHAwOiBmbGFncz0yMjAyODUxPFVQLFBPSU5U
T1BPSU5ULFJVTk5JTkcsTVVMVElDQVNULFVOTlVNQkVSRUQsTk9OVUQsSVB2Nj4gbXR1IDE1
MDAgaW5kZXggMTIKLSAgICAgICAgaW5ldDYgZmU4MDo6YTAwOjIwZmY6ZmU4ZDozOGMxLzEw
IC0tPiBmZTgwOjphMDA6MjBmZjpmZTdhOjI0ZmIKKyAgIFRoaXMgaW5zdGFsbHMgdGhlIGZv
bGxvd2luZzoKIAotICBOb3RlIGFsc28gdGhhdCBhIHBsdW1iZWQgaXB2NiBpbnRlcmZhY2Ug
c3RyZWFtIHdpbGwgZXhpc3QgdGhyb3VnaG91dAotICB0aGUgZW50aXJlIFBQUCBzZXNzaW9u
IGluIHRoZSBjYXNlIHdoZXJlIHRoZSBwZWVyIHJlamVjdHMgSVBWNkNQLAotICB3aGljaCBm
dXJ0aGVyIGNhdXNlcyB0aGUgaW50ZXJmYWNlIHN0YXRlIHRvIHN0YXkgZG93bi4gVW5wbHVt
YmluZwotICB3aWxsIGhhcHBlbiB3aGVuIHRoZSBkYWVtb24gZXhpdHMuIFRoaXMgaXMgZG9u
ZSBieSBkZXNpZ24gYW5kIGlzIG5vdAotICBhIGJ1Zy4KKyAgICAgL3Vzci9sb2NhbC9zYmlu
ICAgICAgICAgICAgcHBwZCwgY2hhdCwgcHBwc3RhdHMsIHBwcGR1bXAKKyAgICAgL3Vzci9s
b2NhbC9zaGFyZS9tYW4vbWFuOCAgbWFuIHBhZ2VzCisgICAgIC91c3IvbG9jYWwvaW5jbHVk
ZS9wcHBkICAgIHBsdWctaW4gaGVhZGVyIGZpbGVzCisgICAgIC91c3IvbG9jYWwvbGliL3Bw
cGQvJFZFUglwbHVnLWluIG1vZHVsZXMKKyAgICAgL3Vzci9sb2NhbC9ldGMvcHBwICAgICAg
ICAgZXhhbXBsZSBjb25maWd1cmF0aW9uIGZpbGVzCisgICAgCisgICBJZiB5b3VyIHN5c3Rl
bSBub3JtYWxseSBoYXMgb25seSBvbmUgbmV0d29yayBpbnRlcmZhY2UgYXQgYm9vdAorICAg
dGltZSwgdGhlIGRlZmF1bHQgU29sYXJpcyBzeXN0ZW0gc3RhcnR1cCBzY3JpcHRzIHdpbGwg
ZGlzYWJsZSBJUAorICAgZm9yd2FyZGluZyBpbiB0aGUgSVAga2VybmVsIG1vZHVsZS4gIFRo
aXMgd2lsbCBwcmV2ZW50IHRoZSByZW1vdGUKKyAgIG1hY2hpbmUgZnJvbSB1c2luZyB0aGUg
bG9jYWwgbWFjaGluZSBhcyBhIGdhdGV3YXkgdG8gYWNjZXNzIG90aGVyCisgICBob3N0cy4g
IFRoZSBzb2x1dGlvbiBpcyB0byBjcmVhdGUgYW4gL2V0Yy9wcHAvaXAtdXAgc2NyaXB0Cisg
ICBjb250YWluaW5nIHNvbWV0aGluZyBsaWtlIHRoaXM6CiAKLTY0LWJpdCBTdXBwb3J0Lgot
KioqKioqKioqKioqKioqCisgICAgICMhL2Jpbi9zaAorICAgICAvdXNyL3NiaW4vbmRkIC1z
ZXQgL2Rldi9pcCBpcF9mb3J3YXJkaW5nIDEKIAotICBUaGlzIHZlcnNpb24gaGFzIGJlZW4g
dGVzdGVkIHVuZGVyIFNvbGFyaXMgNyB0aHJvdWdoIDkgaW4gYm90aCAzMi0KLSAgYW5kIDY0
LWJpdCBlbnZpcm9ubWVudHMgKFVsdHJhIGNsYXNzIG1hY2hpbmVzKS4gIEluc3RhbGxpbmcg
dGhlCi0gIHBhY2thZ2UgYnkgZXhlY3V0aW5nICJtYWtlIGluc3RhbGwiIHdpbGwgcmVzdWx0
IGluIGFkZGl0aW9uYWwgZmlsZXMKLSAgcmVzaWRpbmcgaW4gL2tlcm5lbC9kcnYvc3BhcmN2
OSBhbmQgL2tlcm5lbC9zdHJtb2Qvc3BhcmN2OQotICBzdWJkaXJlY3Rvcmllcy4KKyAgIFNl
ZSB0aGUgbWFuIHBhZ2UgZm9yIGlwKDdwKSBmb3IgZGV0YWlscy4KIAotICA2NC1iaXQgbW9k
dWxlcyBhbmQgZHJpdmVyIGhhdmUgYmVlbiBjb21waWxlZCBhbmQgdGVzdGVkIHVzaW5nIFN1
bidzCi0gIGNjIGFuZCBnY2MuCiAKIFN5bmNocm9ub3VzIFNlcmlhbCBTdXBwb3J0LgogKioq
KioqKioqKioqKioqKioqKioqKioqKioqCkBAIC0yMjAsMTQgKzc0LDggQEAgU3luY2hyb25v
dXMgU2VyaWFsIFN1cHBvcnQuCiAgIHdhcyB0ZXN0ZWQgd2l0aCBhIENpc2NvIHJvdXRlci4K
IAogICBUaGUgcHBwIGRhZW1vbiBkb2VzIG5vdCBkaXJlY3RseSBzdXBwb3J0IGNvbnRyb2xs
aW5nIHRoZSBzZXJpYWwKLSAgaW50ZXJmYWNlLiAgSXQgcmVsaWVzIG9uIHRoZSAvdXNyL3Ni
aW4vc3luY2luaXQgY29tbWFuZCB0bwotICBpbml0aWFsaXplIEhETEMgbW9kZSBhbmQgY2xv
Y2tpbmcuCi0KLSAgVGhlcmUgaXMgYSBjb25maXJtZWQgYnVnIHdpdGggTlJaL05SWkkgbW9k
ZSBpbiB0aGUgL2Rldi9zZV9oZGxjCi0gIGRyaXZlciwgYW5kIFNvbGFyaXMgcGF0Y2ggMTA0
NTk2LTExIGlzIG5lZWRlZCB0byBjb3JyZWN0IGl0LgotICAoSG93ZXZlciB0aGlzIHBhdGNo
IHNlZW1zIHRvIGludHJvZHVjZSBvdGhlciBzZXJpYWwgcHJvYmxlbXMuICBJZgotICB5b3Ug
ZG9uJ3QgYXBwbHkgdGhlIHBhdGNoLCB0aGUgd29ya2Fyb3VuZCBpcyB0byBjaGFuZ2UgdGhl
IG5yemkgbW9kZQotICB0byB5ZXMgb3Igbm8sIHdoaWNoZXZlciB3b3Jrcy4pCisgIGludGVy
ZmFjZS4gIEl0IHJlbGllcyBvbiB0aGUgT1Mtc3VwcGxpZWQgL3Vzci9zYmluL3N5bmNpbml0
IGNvbW1hbmQKKyAgdG8gaW5pdGlhbGl6ZSBIRExDIG1vZGUgYW5kIGNsb2NraW5nLgogCiAg
IEhvdyB0byBzdGFydCBwcHBkIHdpdGggc3luY2hyb25vdXMgc3VwcG9ydDoKIApkaWZmIC0t
Z2l0IGEvY29uZmlndXJlLmFjIGIvY29uZmlndXJlLmFjCmluZGV4IDRiNWUwZmMuLmUzMGYx
NjEgMTAwNjQ0Ci0tLSBhL2NvbmZpZ3VyZS5hYworKysgYi9jb25maWd1cmUuYWMKQEAgLTEz
OCw3ICsxMzgsNyBAQCBBTV9DT05ESVRJT05BTChQUFBfV0lUSF9DSEFQTVMsIHRlc3QgIngk
e2VuYWJsZV9taWNyb3NvZnRfZXh0ZW5zaW9uc30iICE9ICJ4bm8iKQogQU1fQ09ORF9JRihb
UFBQX1dJVEhfQ0hBUE1TXSwKICAgICBBQ19ERUZJTkUoW1BQUF9XSVRIX0NIQVBNU10sIDEs
IFtIYXZlIE1pY3Jvc29mdCBDSEFQIHN1cHBvcnRdKSkKIAotQU1fQ09ORElUSU9OQUwoUFBQ
X1dJVEhfTVBQRSwgdGVzdCAieCR7ZW5hYmxlX21pY3Jvc29mdF9leHRlbnNpb25zfSIgIT0g
InhubyIpCitBTV9DT05ESVRJT05BTChQUFBfV0lUSF9NUFBFLCB0ZXN0ICJ4JHtidWlsZF9z
dW5vc30iICE9ICJ4eWVzIiAmJiB0ZXN0ICJ4JHtlbmFibGVfbWljcm9zb2Z0X2V4dGVuc2lv
bnN9IiAhPSAieG5vIikKIEFNX0NPTkRfSUYoW1BQUF9XSVRIX01QUEVdLAogICAgIEFDX0RF
RklORShbUFBQX1dJVEhfTVBQRV0sIDEsIFtIYXZlIE1pY3Jvc29mdCBNUFBFIHN1cHBvcnRd
KSkKIApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9NYWtlZmlsZS5hbSBiL2luY2x1ZGUvTWFrZWZp
bGUuYW0KaW5kZXggMzc3N2Y4Yy4uYzkyYTlmYSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9NYWtl
ZmlsZS5hbQorKysgYi9pbmNsdWRlL01ha2VmaWxlLmFtCkBAIC0xLDEwICsxLDYgQEAKIEVY
VFJBX0hFQURFUlMgPSBcCiAgICAgbGludXgvcHBwLWNvbXAuaCBcCi0gICAgbGludXgvcHBw
X2RlZnMuaCBcCi0gICAgbmV0L3BwcC1jb21wLmggXAotICAgIG5ldC9wcHBfZGVmcy5oIFwK
LSAgICBuZXQvcHBwaW8uaCBcCi0gICAgbmV0L3ZqY29tcHJlc3MuaAorICAgIGxpbnV4L3Bw
cF9kZWZzLmgKIAogRVhUUkFfRElTVCA9IFwKICAgICAkKEVYVFJBX0hFQURFUlMpCmRpZmYg
LS1naXQgYS9pbmNsdWRlL25ldC9wcHAtY29tcC5oIGIvaW5jbHVkZS9uZXQvcHBwLWNvbXAu
aApkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggYzlhMDMwNC4uMDAwMDAwMAotLS0g
YS9pbmNsdWRlL25ldC9wcHAtY29tcC5oCisrKyAvZGV2L251bGwKQEAgLTEsMTc5ICswLDAg
QEAKLS8qCi0gKiBwcHAtY29tcC5oIC0gRGVmaW5pdGlvbnMgZm9yIGRvaW5nIFBQUCBwYWNr
ZXQgY29tcHJlc3Npb24uCi0gKgotICogQ29weXJpZ2h0IChjKSAxOTk0IFBhdWwgTWFja2Vy
cmFzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgotICoKLSAqIFJlZGlzdHJpYnV0aW9uIGFuZCB1
c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dAotICogbW9k
aWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBj
b25kaXRpb25zCi0gKiBhcmUgbWV0OgotICoKLSAqIDEuIFJlZGlzdHJpYnV0aW9ucyBvZiBz
b3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0Ci0gKiAgICBub3Rp
Y2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWlt
ZXIuCi0gKgotICogMi4gUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVw
cm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHQKLSAqICAgIG5vdGljZSwgdGhpcyBsaXN0IG9m
IGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbgotICogICAgdGhl
IGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRo
ZQotICogICAgZGlzdHJpYnV0aW9uLgotICoKLSAqIDMuIFRoZSBuYW1lKHMpIG9mIHRoZSBh
dXRob3JzIG9mIHRoaXMgc29mdHdhcmUgbXVzdCBub3QgYmUgdXNlZCB0bwotICogICAgZW5k
b3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdp
dGhvdXQKLSAqICAgIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi4KLSAqCi0gKiA0LiBSZWRp
c3RyaWJ1dGlvbnMgb2YgYW55IGZvcm0gd2hhdHNvZXZlciBtdXN0IHJldGFpbiB0aGUgZm9s
bG93aW5nCi0gKiAgICBhY2tub3dsZWRnbWVudDoKLSAqICAgICJUaGlzIHByb2R1Y3QgaW5j
bHVkZXMgc29mdHdhcmUgZGV2ZWxvcGVkIGJ5IFBhdWwgTWFja2VycmFzCi0gKiAgICAgPHBh
dWx1c0BvemxhYnMub3JnPiIuCi0gKgotICogVEhFIEFVVEhPUlMgT0YgVEhJUyBTT0ZUV0FS
RSBESVNDTEFJTSBBTEwgV0FSUkFOVElFUyBXSVRIIFJFR0FSRCBUTwotICogVEhJUyBTT0ZU
V0FSRSwgSU5DTFVESU5HIEFMTCBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklM
SVRZCi0gKiBBTkQgRklUTkVTUywgSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgQkUg
TElBQkxFIEZPUiBBTlkKLSAqIFNQRUNJQUwsIElORElSRUNUIE9SIENPTlNFUVVFTlRJQUwg
REFNQUdFUyBPUiBBTlkgREFNQUdFUwotICogV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTSBM
T1NTIE9GIFVTRSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOCi0gKiBBTiBBQ1RJT04g
T0YgQ09OVFJBQ1QsIE5FR0xJR0VOQ0UgT1IgT1RIRVIgVE9SVElPVVMgQUNUSU9OLCBBUklT
SU5HCi0gKiBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBVU0UgT1IgUEVSRk9S
TUFOQ0UgT0YgVEhJUyBTT0ZUV0FSRS4KLSAqCi0gKiAkSWQ6IHBwcC1jb21wLmgsdiAxLjEz
IDIwMDIvMTIvMDYgMDk6NDk6MTUgcGF1bHVzIEV4cCAkCi0gKi8KLQotI2lmbmRlZiBfTkVU
X1BQUF9DT01QX0gKLSNkZWZpbmUgX05FVF9QUFBfQ09NUF9ICi0KLS8qCi0gKiBUaGUgZm9s
bG93aW5nIHN5bWJvbHMgY29udHJvbCB3aGV0aGVyIHdlIGluY2x1ZGUgY29kZSBmb3IKLSAq
IHZhcmlvdXMgY29tcHJlc3Npb24gbWV0aG9kcy4KLSAqLwotI2lmbmRlZiBET19CU0RfQ09N
UFJFU1MKLSNkZWZpbmUgRE9fQlNEX0NPTVBSRVNTCTEJLyogYnkgZGVmYXVsdCwgaW5jbHVk
ZSBCU0QtQ29tcHJlc3MgKi8KLSNlbmRpZgotI2lmbmRlZiBET19ERUZMQVRFCi0jZGVmaW5l
IERPX0RFRkxBVEUJMQkvKiBieSBkZWZhdWx0LCBpbmNsdWRlIERlZmxhdGUgKi8KLSNlbmRp
ZgotI2RlZmluZSBET19QUkVESUNUT1JfMQkwCi0jZGVmaW5lIERPX1BSRURJQ1RPUl8yCTAK
LQotLyoKLSAqIFN0cnVjdHVyZSBnaXZpbmcgbWV0aG9kcyBmb3IgY29tcHJlc3Npb24vZGVj
b21wcmVzc2lvbi4KLSAqLwotI2lmZGVmIFBBQ0tFVFBUUgotc3RydWN0IGNvbXByZXNzb3Ig
ewotCWludAljb21wcmVzc19wcm90bzsJLyogQ0NQIGNvbXByZXNzaW9uIHByb3RvY29sIG51
bWJlciAqLwotCi0JLyogQWxsb2NhdGUgc3BhY2UgZm9yIGEgY29tcHJlc3NvciAodHJhbnNt
aXQgc2lkZSkgKi8KLQl2b2lkCSooKmNvbXBfYWxsb2MpKHVfY2hhciAqb3B0aW9ucywgaW50
IG9wdF9sZW4pOwotCS8qIEZyZWUgc3BhY2UgdXNlZCBieSBhIGNvbXByZXNzb3IgKi8KLQl2
b2lkCSgqY29tcF9mcmVlKSh2b2lkICpzdGF0ZSk7Ci0JLyogSW5pdGlhbGl6ZSBhIGNvbXBy
ZXNzb3IgKi8KLQlpbnQJKCpjb21wX2luaXQpKHZvaWQgKnN0YXRlLCB1X2NoYXIgKm9wdGlv
bnMsIGludCBvcHRfbGVuLAotCQkJICAgICBpbnQgdW5pdCwgaW50IGhkcmxlbiwgaW50IGRl
YnVnKTsKLQkvKiBSZXNldCBhIGNvbXByZXNzb3IgKi8KLQl2b2lkCSgqY29tcF9yZXNldCko
dm9pZCAqc3RhdGUpOwotCS8qIENvbXByZXNzIGEgcGFja2V0ICovCi0JaW50CSgqY29tcHJl
c3MpKHZvaWQgKnN0YXRlLCBQQUNLRVRQVFIgKm1yZXQsCi0JCQkgICAgUEFDS0VUUFRSIG1w
LCBpbnQgb3JpZ19sZW4sIGludCBtYXhfbGVuKTsKLQkvKiBSZXR1cm4gY29tcHJlc3Npb24g
c3RhdGlzdGljcyAqLwotCXZvaWQJKCpjb21wX3N0YXQpKHZvaWQgKnN0YXRlLCBzdHJ1Y3Qg
Y29tcHN0YXQgKnN0YXRzKTsKLQotCS8qIEFsbG9jYXRlIHNwYWNlIGZvciBhIGRlY29tcHJl
c3NvciAocmVjZWl2ZSBzaWRlKSAqLwotCXZvaWQJKigqZGVjb21wX2FsbG9jKSh1X2NoYXIg
Km9wdGlvbnMsIGludCBvcHRfbGVuKTsKLQkvKiBGcmVlIHNwYWNlIHVzZWQgYnkgYSBkZWNv
bXByZXNzb3IgKi8KLQl2b2lkCSgqZGVjb21wX2ZyZWUpKHZvaWQgKnN0YXRlKTsKLQkvKiBJ
bml0aWFsaXplIGEgZGVjb21wcmVzc29yICovCi0JaW50CSgqZGVjb21wX2luaXQpKHZvaWQg
KnN0YXRlLCB1X2NoYXIgKm9wdGlvbnMsIGludCBvcHRfbGVuLAotCQkJICAgICAgIGludCB1
bml0LCBpbnQgaGRybGVuLCBpbnQgbXJ1LCBpbnQgZGVidWcpOwotCS8qIFJlc2V0IGEgZGVj
b21wcmVzc29yICovCi0Jdm9pZAkoKmRlY29tcF9yZXNldCkodm9pZCAqc3RhdGUpOwotCS8q
IERlY29tcHJlc3MgYSBwYWNrZXQuICovCi0JaW50CSgqZGVjb21wcmVzcykodm9pZCAqc3Rh
dGUsIFBBQ0tFVFBUUiBtcCwKLQkJCSAgICAgIFBBQ0tFVFBUUiAqZG1wcCk7Ci0JLyogVXBk
YXRlIHN0YXRlIGZvciBhbiBpbmNvbXByZXNzaWJsZSBwYWNrZXQgcmVjZWl2ZWQgKi8KLQl2
b2lkCSgqaW5jb21wKSh2b2lkICpzdGF0ZSwgUEFDS0VUUFRSIG1wKTsKLQkvKiBSZXR1cm4g
ZGVjb21wcmVzc2lvbiBzdGF0aXN0aWNzICovCi0Jdm9pZAkoKmRlY29tcF9zdGF0KSh2b2lk
ICpzdGF0ZSwgc3RydWN0IGNvbXBzdGF0ICpzdGF0cyk7Ci19OwotI2VuZGlmIC8qIFBBQ0tF
VFBUUiAqLwotCi0vKgotICogUmV0dXJuIHZhbHVlcyBmb3IgZGVjb21wcmVzcyByb3V0aW5l
LgotICogV2UgbmVlZCB0byBtYWtlIHRoZXNlIGRpc3RpbmN0aW9ucyBzbyB0aGF0IHdlIGNh
biBkaXNhYmxlIGNlcnRhaW4KLSAqIHVzZWZ1bCBmdW5jdGlvbmFsaXR5LCBuYW1lbHkgc2Vu
ZGluZyBhIENDUCByZXNldC1yZXF1ZXN0IGFzIGEgcmVzdWx0Ci0gKiBvZiBhbiBlcnJvciBk
ZXRlY3RlZCBhZnRlciBkZWNvbXByZXNzaW9uLiAgVGhpcyBpcyB0byBhdm9pZCBpbmZyaW5n
aW5nCi0gKiBhIHBhdGVudCBoZWxkIGJ5IE1vdG9yb2xhLgotICogRG9uJ3QgeW91IGp1c3Qg
bHVydmUgc29mdHdhcmUgcGF0ZW50cy4KLSAqLwotI2RlZmluZSBERUNPTVBfT0sJCTAJLyog
ZXZlcnl0aGluZyB3ZW50IE9LICovCi0jZGVmaW5lIERFQ09NUF9FUlJPUgkJMQkvKiBlcnJv
ciBkZXRlY3RlZCBiZWZvcmUgZGVjb21wLiAqLwotI2RlZmluZSBERUNPTVBfRkFUQUxFUlJP
UgkyCS8qIGVycm9yIGRldGVjdGVkIGFmdGVyIGRlY29tcC4gKi8KLQotLyoKLSAqIENDUCBj
b2Rlcy4KLSAqLwotI2RlZmluZSBDQ1BfQ09ORlJFUQkxCi0jZGVmaW5lIENDUF9DT05GQUNL
CTIKLSNkZWZpbmUgQ0NQX1RFUk1SRVEJNQotI2RlZmluZSBDQ1BfVEVSTUFDSwk2Ci0jZGVm
aW5lIENDUF9SRVNFVFJFUQkxNAotI2RlZmluZSBDQ1BfUkVTRVRBQ0sJMTUKLQotLyoKLSAq
IE1heCAjIGJ5dGVzIGZvciBhIENDUCBvcHRpb24KLSAqLwotI2RlZmluZSBDQ1BfTUFYX09Q
VElPTl9MRU5HVEgJMzIKLQotLyoKLSAqIFBhcnRzIG9mIGEgQ0NQIHBhY2tldC4KLSAqLwot
I2RlZmluZSBDQ1BfQ09ERShkcCkJCSgoZHApWzBdKQotI2RlZmluZSBDQ1BfSUQoZHApCQko
KGRwKVsxXSkKLSNkZWZpbmUgQ0NQX0xFTkdUSChkcCkJCSgoKGRwKVsyXSA8PCA4KSArIChk
cClbM10pCi0jZGVmaW5lIENDUF9IRFJMRU4JCTQKLQotI2RlZmluZSBDQ1BfT1BUX0NPREUo
ZHApCSgoZHApWzBdKQotI2RlZmluZSBDQ1BfT1BUX0xFTkdUSChkcCkJKChkcClbMV0pCi0j
ZGVmaW5lIENDUF9PUFRfTUlOTEVOCQkyCi0KLS8qCi0gKiBEZWZpbml0aW9ucyBmb3IgQlNE
LUNvbXByZXNzLgotICovCi0jZGVmaW5lIENJX0JTRF9DT01QUkVTUwkJMjEJLyogY29uZmln
LiBvcHRpb24gZm9yIEJTRC1Db21wcmVzcyAqLwotI2RlZmluZSBDSUxFTl9CU0RfQ09NUFJF
U1MJMwkvKiBsZW5ndGggb2YgY29uZmlnLiBvcHRpb24gKi8KLQotLyogTWFjcm9zIGZvciBo
YW5kbGluZyB0aGUgM3JkIGJ5dGUgb2YgdGhlIEJTRC1Db21wcmVzcyBjb25maWcgb3B0aW9u
LiAqLwotI2RlZmluZSBCU0RfTkJJVFMoeCkJCSgoeCkgJiAweDFGKQkvKiBudW1iZXIgb2Yg
Yml0cyByZXF1ZXN0ZWQgKi8KLSNkZWZpbmUgQlNEX1ZFUlNJT04oeCkJCSgoeCkgPj4gNSkJ
LyogdmVyc2lvbiBvZiBvcHRpb24gZm9ybWF0ICovCi0jZGVmaW5lIEJTRF9DVVJSRU5UX1ZF
UlNJT04JMQkJLyogY3VycmVudCB2ZXJzaW9uIG51bWJlciAqLwotI2RlZmluZSBCU0RfTUFL
RV9PUFQodiwgbikJKCgodikgPDwgNSkgfCAobikpCi0KLSNkZWZpbmUgQlNEX01JTl9CSVRT
CQk5CS8qIHNtYWxsZXN0IGNvZGUgc2l6ZSBzdXBwb3J0ZWQgKi8KLSNkZWZpbmUgQlNEX01B
WF9CSVRTCQkxNQkvKiBsYXJnZXN0IGNvZGUgc2l6ZSBzdXBwb3J0ZWQgKi8KLQotLyoKLSAq
IERlZmluaXRpb25zIGZvciBEZWZsYXRlLgotICovCi0jZGVmaW5lIENJX0RFRkxBVEUJCTI2
CS8qIGNvbmZpZyBvcHRpb24gZm9yIERlZmxhdGUgKi8KLSNkZWZpbmUgQ0lfREVGTEFURV9E
UkFGVAkyNAkvKiB2YWx1ZSB1c2VkIGluIG9yaWdpbmFsIGRyYWZ0IFJGQyAqLwotI2RlZmlu
ZSBDSUxFTl9ERUZMQVRFCQk0CS8qIGxlbmd0aCBvZiBpdHMgY29uZmlnIG9wdGlvbiAqLwot
Ci0jZGVmaW5lIERFRkxBVEVfTUlOX1NJWkUJOAotI2RlZmluZSBERUZMQVRFX01BWF9TSVpF
CTE1Ci0jZGVmaW5lIERFRkxBVEVfTUVUSE9EX1ZBTAk4Ci0jZGVmaW5lIERFRkxBVEVfU0la
RSh4KQkJKCgoeCkgPj4gNCkgKyBERUZMQVRFX01JTl9TSVpFKQotI2RlZmluZSBERUZMQVRF
X01FVEhPRCh4KQkoKHgpICYgMHgwRikKLSNkZWZpbmUgREVGTEFURV9NQUtFX09QVCh3KQko
KCgodykgLSBERUZMQVRFX01JTl9TSVpFKSA8PCA0KSBcCi0JCQkJICsgREVGTEFURV9NRVRI
T0RfVkFMKQotI2RlZmluZSBERUZMQVRFX0NIS19TRVFVRU5DRQkwCi0KLS8qCi0gKiBEZWZp
bml0aW9ucyBmb3IgTVBQRS4KLSAqLwotI2RlZmluZSBDSV9NUFBFCQkJMTgJLyogY29uZmln
IG9wdGlvbiBmb3IgTVBQRSAqLwotI2RlZmluZSBDSUxFTl9NUFBFCQk2CS8qIGxlbmd0aCBv
ZiBjb25maWcgb3B0aW9uICovCi0KLS8qCi0gKiBEZWZpbml0aW9ucyBmb3Igb3RoZXIsIGFz
IHlldCB1bnN1cHBvcnRlZCwgY29tcHJlc3Npb24gbWV0aG9kcy4KLSAqLwotI2RlZmluZSBD
SV9QUkVESUNUT1JfMQkJMQkvKiBjb25maWcgb3B0aW9uIGZvciBQcmVkaWN0b3ItMSAqLwot
I2RlZmluZSBDSUxFTl9QUkVESUNUT1JfMQkyCS8qIGxlbmd0aCBvZiBpdHMgY29uZmlnIG9w
dGlvbiAqLwotI2RlZmluZSBDSV9QUkVESUNUT1JfMgkJMgkvKiBjb25maWcgb3B0aW9uIGZv
ciBQcmVkaWN0b3ItMiAqLwotI2RlZmluZSBDSUxFTl9QUkVESUNUT1JfMgkyCS8qIGxlbmd0
aCBvZiBpdHMgY29uZmlnIG9wdGlvbiAqLwotCi0jZW5kaWYgLyogX05FVF9QUFBfQ09NUF9I
ICovCmRpZmYgLS1naXQgYS9pbmNsdWRlL25ldC9wcHBfZGVmcy5oIGIvaW5jbHVkZS9uZXQv
cHBwX2RlZnMuaApkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDdhMGI1Yy4uMDAw
MDAwMAotLS0gYS9pbmNsdWRlL25ldC9wcHBfZGVmcy5oCisrKyAvZGV2L251bGwKQEAgLTEs
MTg2ICswLDAgQEAKLS8qCSRJZDogcHBwX2RlZnMuaCx2IDEuMTcgMjAwMi8xMi8wNiAwOTo0
OToxNSBwYXVsdXMgRXhwICQJKi8KLQotLyoKLSAqIHBwcF9kZWZzLmggLSBQUFAgZGVmaW5p
dGlvbnMuCi0gKgotICogQ29weXJpZ2h0IChjKSAxOTk0IFBhdWwgTWFja2VycmFzLiBBbGwg
cmlnaHRzIHJlc2VydmVkLgotICoKLSAqIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291
cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dAotICogbW9kaWZpY2F0aW9u
LCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25z
Ci0gKiBhcmUgbWV0OgotICoKLSAqIDEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29k
ZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0Ci0gKiAgICBub3RpY2UsIHRoaXMg
bGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCi0gKgot
ICogMi4gUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRo
ZSBhYm92ZSBjb3B5cmlnaHQKLSAqICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlv
bnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbgotICogICAgdGhlIGRvY3VtZW50
YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZQotICogICAg
ZGlzdHJpYnV0aW9uLgotICoKLSAqIDMuIFRoZSBuYW1lKHMpIG9mIHRoZSBhdXRob3JzIG9m
IHRoaXMgc29mdHdhcmUgbXVzdCBub3QgYmUgdXNlZCB0bwotICogICAgZW5kb3JzZSBvciBw
cm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdpdGhvdXQKLSAq
ICAgIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi4KLSAqCi0gKiA0LiBSZWRpc3RyaWJ1dGlv
bnMgb2YgYW55IGZvcm0gd2hhdHNvZXZlciBtdXN0IHJldGFpbiB0aGUgZm9sbG93aW5nCi0g
KiAgICBhY2tub3dsZWRnbWVudDoKLSAqICAgICJUaGlzIHByb2R1Y3QgaW5jbHVkZXMgc29m
dHdhcmUgZGV2ZWxvcGVkIGJ5IFBhdWwgTWFja2VycmFzCi0gKiAgICAgPHBhdWx1c0Bvemxh
YnMub3JnPiIuCi0gKgotICogVEhFIEFVVEhPUlMgT0YgVEhJUyBTT0ZUV0FSRSBESVNDTEFJ
TSBBTEwgV0FSUkFOVElFUyBXSVRIIFJFR0FSRCBUTwotICogVEhJUyBTT0ZUV0FSRSwgSU5D
TFVESU5HIEFMTCBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZCi0gKiBB
TkQgRklUTkVTUywgSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgQkUgTElBQkxFIEZP
UiBBTlkKLSAqIFNQRUNJQUwsIElORElSRUNUIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyBP
UiBBTlkgREFNQUdFUwotICogV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTSBMT1NTIE9GIFVT
RSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOCi0gKiBBTiBBQ1RJT04gT0YgQ09OVFJB
Q1QsIE5FR0xJR0VOQ0UgT1IgT1RIRVIgVE9SVElPVVMgQUNUSU9OLCBBUklTSU5HCi0gKiBP
VVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBVU0UgT1IgUEVSRk9STUFOQ0UgT0Yg
VEhJUyBTT0ZUV0FSRS4KLSAqLwotCi0jaWZuZGVmIF9QUFBfREVGU19IXwotI2RlZmluZSBf
UFBQX0RFRlNfSF8KLQotLyoKLSAqIFRoZSBiYXNpYyBQUFAgZnJhbWUuCi0gKi8KLSNkZWZp
bmUgUFBQX0hEUkxFTgk0CS8qIG9jdGV0cyBmb3Igc3RhbmRhcmQgcHBwIGhlYWRlciAqLwot
I2RlZmluZSBQUFBfRkNTTEVOCTIJLyogb2N0ZXRzIGZvciBGQ1MgKi8KLQotLyoKLSAqIFBh
Y2tldCBzaXplcwotICoKLSAqIE5vdGUgLSBsY3Agc2hvdWxkbid0IGJlIGFsbG93ZWQgdG8g
bmVnb3RpYXRlIHN0dWZmIG91dHNpZGUgdGhlc2UKLSAqCSAgbGltaXRzLiAgU2VlIGxjcC5o
IGluIHRoZSBwcHBkIGRpcmVjdG9yeS4KLSAqIChYWFggLSB0aGVzZSBjb25zdGFudHMgc2hv
dWxkIHNpbXBseSBiZSBzaGFyZWQgYnkgbGNwLmMgaW5zdGVhZAotICoJICBvZiBsaXZpbmcg
aW4gbGNwLmgpCi0gKi8KLSNkZWZpbmUJUFBQX01UVQkJMTUwMAkvKiBEZWZhdWx0IE1UVSAo
c2l6ZSBvZiBJbmZvIGZpZWxkKSAqLwotI2RlZmluZSBQUFBfTUFYTVRVCTY1NTM1IC0gKFBQ
UF9IRFJMRU4gKyBQUFBfRkNTTEVOKQotI2RlZmluZSBQUFBfTUlOTVRVCTY0Ci0jZGVmaW5l
IFBQUF9NUlUJCTE1MDAJLyogZGVmYXVsdCBNUlUgPSBtYXggbGVuZ3RoIG9mIGluZm8gZmll
bGQgKi8KLSNkZWZpbmUgUFBQX01BWE1SVQk2NTAwMAkvKiBMYXJnZXN0IE1SVSB3ZSBhbGxv
dyAqLwotI2RlZmluZSBQUFBfTUlOTVJVCTEyOAotCi0jZGVmaW5lIFBQUF9BRERSRVNTKHAp
CSgoKHVfY2hhciAqKShwKSlbMF0pCi0jZGVmaW5lIFBQUF9DT05UUk9MKHApCSgoKHVfY2hh
ciAqKShwKSlbMV0pCi0jZGVmaW5lIFBQUF9QUk9UT0NPTChwKQkoKCgodV9jaGFyICopKHAp
KVsyXSA8PCA4KSArICgodV9jaGFyICopKHApKVszXSkKLQotLyoKLSAqIFNpZ25pZmljYW50
IG9jdGV0IHZhbHVlcy4KLSAqLwotI2RlZmluZQlQUFBfQUxMU1RBVElPTlMJMHhmZgkvKiBB
bGwtU3RhdGlvbnMgYnJvYWRjYXN0IGFkZHJlc3MgKi8KLSNkZWZpbmUJUFBQX1VJCQkweDAz
CS8qIFVubnVtYmVyZWQgSW5mb3JtYXRpb24gKi8KLSNkZWZpbmUJUFBQX0ZMQUcJMHg3ZQkv
KiBGbGFnIFNlcXVlbmNlICovCi0jZGVmaW5lCVBQUF9FU0NBUEUJMHg3ZAkvKiBBc3luY2hy
b25vdXMgQ29udHJvbCBFc2NhcGUgKi8KLSNkZWZpbmUJUFBQX1RSQU5TCTB4MjAJLyogQXN5
bmNocm9ub3VzIHRyYW5zcGFyZW5jeSBtb2RpZmllciAqLwotCi0vKgotICogUHJvdG9jb2wg
ZmllbGQgdmFsdWVzLgotICovCi0jZGVmaW5lIFBQUF9JUAkJMHgyMQkvKiBJbnRlcm5ldCBQ
cm90b2NvbCAqLwotI2RlZmluZSBQUFBfQVQJCTB4MjkJLyogQXBwbGVUYWxrIFByb3RvY29s
ICovCi0jZGVmaW5lIFBQUF9JUFgJCTB4MmIJLyogSVBYIHByb3RvY29sICovCi0jZGVmaW5l
CVBQUF9WSkNfQ09NUAkweDJkCS8qIFZKIGNvbXByZXNzZWQgVENQICovCi0jZGVmaW5lCVBQ
UF9WSkNfVU5DT01QCTB4MmYJLyogVkogdW5jb21wcmVzc2VkIFRDUCAqLwotI2RlZmluZSBQ
UFBfSVBWNgkweDU3CS8qIEludGVybmV0IFByb3RvY29sIFZlcnNpb24gNiAqLwotI2RlZmlu
ZSBQUFBfQ09NUAkweGZkCS8qIGNvbXByZXNzZWQgcGFja2V0ICovCi0jZGVmaW5lIFBQUF9J
UENQCTB4ODAyMQkvKiBJUCBDb250cm9sIFByb3RvY29sICovCi0jZGVmaW5lIFBQUF9BVENQ
CTB4ODAyOQkvKiBBcHBsZVRhbGsgQ29udHJvbCBQcm90b2NvbCAqLwotI2RlZmluZSBQUFBf
SVBYQ1AJMHg4MDJiCS8qIElQWCBDb250cm9sIFByb3RvY29sICovCi0jZGVmaW5lIFBQUF9J
UFY2Q1AJMHg4MDU3CS8qIElQdjYgQ29udHJvbCBQcm90b2NvbCAqLwotI2RlZmluZSBQUFBf
Q0NQCQkweDgwZmQJLyogQ29tcHJlc3Npb24gQ29udHJvbCBQcm90b2NvbCAqLwotI2RlZmlu
ZSBQUFBfRUNQCQkweDgwNTMJLyogRW5jcnlwdGlvbiBDb250cm9sIFByb3RvY29sICovCi0j
ZGVmaW5lIFBQUF9MQ1AJCTB4YzAyMQkvKiBMaW5rIENvbnRyb2wgUHJvdG9jb2wgKi8KLSNk
ZWZpbmUgUFBQX1BBUAkJMHhjMDIzCS8qIFBhc3N3b3JkIEF1dGhlbnRpY2F0aW9uIFByb3Rv
Y29sICovCi0jZGVmaW5lIFBQUF9MUVIJCTB4YzAyNQkvKiBMaW5rIFF1YWxpdHkgUmVwb3J0
IHByb3RvY29sICovCi0jZGVmaW5lIFBQUF9DSEFQCTB4YzIyMwkvKiBDcnlwdG9ncmFwaGlj
IEhhbmRzaGFrZSBBdXRoLiBQcm90b2NvbCAqLwotI2RlZmluZSBQUFBfQ0JDUAkweGMwMjkJ
LyogQ2FsbGJhY2sgQ29udHJvbCBQcm90b2NvbCAqLwotI2RlZmluZSBQUFBfRUFQCQkweGMy
MjcJLyogRXh0ZW5zaWJsZSBBdXRoZW50aWNhdGlvbiBQcm90b2NvbCAqLwotCi0vKgotICog
VmFsdWVzIGZvciBGQ1MgY2FsY3VsYXRpb25zLgotICovCi0jZGVmaW5lIFBQUF9JTklURkNT
CTB4ZmZmZgkvKiBJbml0aWFsIEZDUyB2YWx1ZSAqLwotI2RlZmluZSBQUFBfR09PREZDUwkw
eGYwYjgJLyogR29vZCBmaW5hbCBGQ1MgdmFsdWUgKi8KLSNkZWZpbmUgUFBQX0ZDUyhmY3Ms
IGMpCSgoKGZjcykgPj4gOCkgXiBmY3N0YWJbKChmY3MpIF4gKGMpKSAmIDB4ZmZdKQotCi0v
KgotICogQSAzMi1iaXQgdW5zaWduZWQgaW50ZWdyYWwgdHlwZS4KLSAqLwotCi0jaWYgIWRl
ZmluZWQoX19CSVRfVFlQRVNfREVGSU5FRF9fKSAmJiAhZGVmaW5lZChfQklUWVBFUykgXAot
ICYmICFkZWZpbmVkKF9fRnJlZUJTRF9fKSAmJiAoTlNfVEFSR0VUIDwgNDApCi0jaWZkZWYJ
VUlOVDMyX1QKLXR5cGVkZWYgVUlOVDMyX1QJdV9pbnQzMl90OwotI2Vsc2UKLXR5cGVkZWYg
dW5zaWduZWQgaW50CXVfaW50MzJfdDsKLXR5cGVkZWYgdW5zaWduZWQgc2hvcnQgIHVfaW50
MTZfdDsKLSNlbmRpZgotI2VuZGlmCi0KLS8qCi0gKiBFeHRlbmRlZCBhc3luY21hcCAtIGFs
bG93cyBhbnkgY2hhcmFjdGVyIHRvIGJlIGVzY2FwZWQuCi0gKi8KLXR5cGVkZWYgdV9pbnQz
Ml90CWV4dF9hY2NtWzhdOwotCi0vKgotICogV2hhdCB0byBkbyB3aXRoIG5ldHdvcmsgcHJv
dG9jb2wgKE5QKSBwYWNrZXRzLgotICovCi1lbnVtIE5QbW9kZSB7Ci0gICAgTlBNT0RFX1BB
U1MsCQkvKiBwYXNzIHRoZSBwYWNrZXQgdGhyb3VnaCAqLwotICAgIE5QTU9ERV9EUk9QLAkJ
Lyogc2lsZW50bHkgZHJvcCB0aGUgcGFja2V0ICovCi0gICAgTlBNT0RFX0VSUk9SLAkJLyog
cmV0dXJuIGFuIGVycm9yICovCi0gICAgTlBNT0RFX1FVRVVFCQkvKiBzYXZlIGl0IHVwIGZv
ciBsYXRlci4gKi8KLX07Ci0KLS8qCi0gKiBTdGF0aXN0aWNzLgotICovCi1zdHJ1Y3QgcHBw
c3RhdAl7Ci0gICAgdW5zaWduZWQgaW50IHBwcF9pYnl0ZXM7CS8qIGJ5dGVzIHJlY2VpdmVk
ICovCi0gICAgdW5zaWduZWQgaW50IHBwcF9pcGFja2V0czsJLyogcGFja2V0cyByZWNlaXZl
ZCAqLwotICAgIHVuc2lnbmVkIGludCBwcHBfaWVycm9yczsJLyogcmVjZWl2ZSBlcnJvcnMg
Ki8KLSAgICB1bnNpZ25lZCBpbnQgcHBwX29ieXRlczsJLyogYnl0ZXMgc2VudCAqLwotICAg
IHVuc2lnbmVkIGludCBwcHBfb3BhY2tldHM7CS8qIHBhY2tldHMgc2VudCAqLwotICAgIHVu
c2lnbmVkIGludCBwcHBfb2Vycm9yczsJLyogdHJhbnNtaXQgZXJyb3JzICovCi19OwotCi1z
dHJ1Y3QgdmpzdGF0IHsKLSAgICB1bnNpZ25lZCBpbnQgdmpzX3BhY2tldHM7CS8qIG91dGJv
dW5kIHBhY2tldHMgKi8KLSAgICB1bnNpZ25lZCBpbnQgdmpzX2NvbXByZXNzZWQ7IC8qIG91
dGJvdW5kIGNvbXByZXNzZWQgcGFja2V0cyAqLwotICAgIHVuc2lnbmVkIGludCB2anNfc2Vh
cmNoZXM7CS8qIHNlYXJjaGVzIGZvciBjb25uZWN0aW9uIHN0YXRlICovCi0gICAgdW5zaWdu
ZWQgaW50IHZqc19taXNzZXM7CS8qIHRpbWVzIGNvdWxkbid0IGZpbmQgY29ubi4gc3RhdGUg
Ki8KLSAgICB1bnNpZ25lZCBpbnQgdmpzX3VuY29tcHJlc3NlZGluOyAvKiBpbmJvdW5kIHVu
Y29tcHJlc3NlZCBwYWNrZXRzICovCi0gICAgdW5zaWduZWQgaW50IHZqc19jb21wcmVzc2Vk
aW47IC8qIGluYm91bmQgY29tcHJlc3NlZCBwYWNrZXRzICovCi0gICAgdW5zaWduZWQgaW50
IHZqc19lcnJvcmluOwkvKiBpbmJvdW5kIHVua25vd24gdHlwZSBwYWNrZXRzICovCi0gICAg
dW5zaWduZWQgaW50IHZqc190b3NzZWQ7CS8qIGluYm91bmQgcGFja2V0cyB0b3NzZWQgYmVj
YXVzZSBvZiBlcnJvciAqLwotfTsKLQotc3RydWN0IHBwcF9zdGF0cyB7Ci0gICAgc3RydWN0
IHBwcHN0YXQgcDsJCS8qIGJhc2ljIFBQUCBzdGF0aXN0aWNzICovCi0gICAgc3RydWN0IHZq
c3RhdCB2ajsJCS8qIFZKIGhlYWRlciBjb21wcmVzc2lvbiBzdGF0aXN0aWNzICovCi19Owot
Ci1zdHJ1Y3QgY29tcHN0YXQgewotICAgIHVuc2lnbmVkIGludCB1bmNfYnl0ZXM7CS8qIHRv
dGFsIHVuY29tcHJlc3NlZCBieXRlcyAqLwotICAgIHVuc2lnbmVkIGludCB1bmNfcGFja2V0
czsJLyogdG90YWwgdW5jb21wcmVzc2VkIHBhY2tldHMgKi8KLSAgICB1bnNpZ25lZCBpbnQg
Y29tcF9ieXRlczsJLyogY29tcHJlc3NlZCBieXRlcyAqLwotICAgIHVuc2lnbmVkIGludCBj
b21wX3BhY2tldHM7CS8qIGNvbXByZXNzZWQgcGFja2V0cyAqLwotICAgIHVuc2lnbmVkIGlu
dCBpbmNfYnl0ZXM7CS8qIGluY29tcHJlc3NpYmxlIGJ5dGVzICovCi0gICAgdW5zaWduZWQg
aW50IGluY19wYWNrZXRzOwkvKiBpbmNvbXByZXNzaWJsZSBwYWNrZXRzICovCi0gICAgdW5z
aWduZWQgaW50IHJhdGlvOwkJLyogcmVjZW50IGNvbXByZXNzaW9uIHJhdGlvIDw8IDggKi8K
LX07Ci0KLXN0cnVjdCBwcHBfY29tcF9zdGF0cyB7Ci0gICAgc3RydWN0IGNvbXBzdGF0IGM7
CQkvKiBwYWNrZXQgY29tcHJlc3Npb24gc3RhdGlzdGljcyAqLwotICAgIHN0cnVjdCBjb21w
c3RhdCBkOwkJLyogcGFja2V0IGRlY29tcHJlc3Npb24gc3RhdGlzdGljcyAqLwotfTsKLQot
LyoKLSAqIFRoZSBmb2xsb3dpbmcgc3RydWN0dXJlIHJlY29yZHMgdGhlIHRpbWUgaW4gc2Vj
b25kcyBzaW5jZQotICogdGhlIGxhc3QgTlAgcGFja2V0IHdhcyBzZW50IG9yIHJlY2VpdmVk
LgotICovCi1zdHJ1Y3QgcHBwX2lkbGUgewotICAgIHRpbWVfdCB4bWl0X2lkbGU7CQkvKiB0
aW1lIHNpbmNlIGxhc3QgTlAgcGFja2V0IHNlbnQgKi8KLSAgICB0aW1lX3QgcmVjdl9pZGxl
OwkJLyogdGltZSBzaW5jZSBsYXN0IE5QIHBhY2tldCByZWNlaXZlZCAqLwotfTsKLQotI2Vu
ZGlmIC8qIF9QUFBfREVGU19IXyAqLwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9uZXQvcHBwaW8u
aCBiL2luY2x1ZGUvbmV0L3BwcGlvLmgKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4
IDliZmMxN2EuLjAwMDAwMDAKLS0tIGEvaW5jbHVkZS9uZXQvcHBwaW8uaAorKysgL2Rldi9u
dWxsCkBAIC0xLDEwNyArMCwwIEBACi0vKgotICogcHBwaW8uaCAtIGlvY3RsIGFuZCBvdGhl
ciBtaXNjLiBkZWZpbml0aW9ucyBmb3IgU1RSRUFNUyBtb2R1bGVzLgotICoKLSAqIENvcHly
aWdodCAoYykgMTk5NCBQYXVsIE1hY2tlcnJhcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KLSAq
Ci0gKiBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1z
LCB3aXRoIG9yIHdpdGhvdXQKLSAqIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92
aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucwotICogYXJlIG1ldDoKLSAqCi0g
KiAxLiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFi
b3ZlIGNvcHlyaWdodAotICogICAgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBh
bmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLgotICoKLSAqIDIuIFJlZGlzdHJpYnV0aW9u
cyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0Ci0g
KiAgICBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5n
IGRpc2NsYWltZXIgaW4KLSAqICAgIHRoZSBkb2N1bWVudGF0aW9uIGFuZC9vciBvdGhlciBt
YXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUKLSAqICAgIGRpc3RyaWJ1dGlvbi4KLSAqCi0g
KiAzLiBUaGUgbmFtZShzKSBvZiB0aGUgYXV0aG9ycyBvZiB0aGlzIHNvZnR3YXJlIG11c3Qg
bm90IGJlIHVzZWQgdG8KLSAqICAgIGVuZG9yc2Ugb3IgcHJvbW90ZSBwcm9kdWN0cyBkZXJp
dmVkIGZyb20gdGhpcyBzb2Z0d2FyZSB3aXRob3V0Ci0gKiAgICBwcmlvciB3cml0dGVuIHBl
cm1pc3Npb24uCi0gKgotICogNC4gUmVkaXN0cmlidXRpb25zIG9mIGFueSBmb3JtIHdoYXRz
b2V2ZXIgbXVzdCByZXRhaW4gdGhlIGZvbGxvd2luZwotICogICAgYWNrbm93bGVkZ21lbnQ6
Ci0gKiAgICAiVGhpcyBwcm9kdWN0IGluY2x1ZGVzIHNvZnR3YXJlIGRldmVsb3BlZCBieSBQ
YXVsIE1hY2tlcnJhcwotICogICAgIDxwYXVsdXNAb3psYWJzLm9yZz4iLgotICoKLSAqIFRI
RSBBVVRIT1JTIE9GIFRISVMgU09GVFdBUkUgRElTQ0xBSU0gQUxMIFdBUlJBTlRJRVMgV0lU
SCBSRUdBUkQgVE8KLSAqIFRISVMgU09GVFdBUkUsIElOQ0xVRElORyBBTEwgSU1QTElFRCBX
QVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWQotICogQU5EIEZJVE5FU1MsIElOIE5PIEVW
RU5UIFNIQUxMIFRIRSBBVVRIT1JTIEJFIExJQUJMRSBGT1IgQU5ZCi0gKiBTUEVDSUFMLCBJ
TkRJUkVDVCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVMKLSAqIFdI
QVRTT0VWRVIgUkVTVUxUSU5HIEZST00gTE9TUyBPRiBVU0UsIERBVEEgT1IgUFJPRklUUywg
V0hFVEhFUiBJTgotICogQU4gQUNUSU9OIE9GIENPTlRSQUNULCBORUdMSUdFTkNFIE9SIE9U
SEVSIFRPUlRJT1VTIEFDVElPTiwgQVJJU0lORwotICogT1VUIE9GIE9SIElOIENPTk5FQ1RJ
T04gV0lUSCBUSEUgVVNFIE9SIFBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuCi0gKgot
ICogJElkOiBwcHBpby5oLHYgMS45IDIwMDIvMTIvMDYgMDk6NDk6MTUgcGF1bHVzIEV4cCAk
Ci0gKi8KLQotI2RlZmluZSBfUFBQSU8obikJKCgncCcgPDwgOCkgKyAobikpCi0KLSNkZWZp
bmUgUFBQSU9fTkVXUFBBCV9QUFBJTygxMzApCS8qIGFsbG9jYXRlIGEgbmV3IFBQUCB1bml0
ICovCi0jZGVmaW5lIFBQUElPX0dFVFNUQVQJX1BQUElPKDEzMSkJLyogZ2V0IFBQUCBzdGF0
aXN0aWNzICovCi0jZGVmaW5lIFBQUElPX0dFVENTVEFUCV9QUFBJTygxMzIpCS8qIGdldCBQ
UFAgY29tcHJlc3Npb24gc3RhdHMgKi8KLSNkZWZpbmUgUFBQSU9fTVRVCV9QUFBJTygxMzMp
CS8qIHNldCBtYXggdHJhbnNtaXNzaW9uIHVuaXQgKi8KLSNkZWZpbmUgUFBQSU9fTVJVCV9Q
UFBJTygxMzQpCS8qIHNldCBtYXggcmVjZWl2ZSB1bml0ICovCi0jZGVmaW5lIFBQUElPX0NG
TEFHUwlfUFBQSU8oMTM1KQkvKiBzZXQvY2xlYXIvZ2V0IGNvbXByZXNzaW9uIGZsYWdzICov
Ci0jZGVmaW5lIFBQUElPX1hDT01QCV9QUFBJTygxMzYpCS8qIGFsbG9jIHRyYW5zbWl0IGNv
bXByZXNzb3IgKi8KLSNkZWZpbmUgUFBQSU9fUkNPTVAJX1BQUElPKDEzNykJLyogYWxsb2Mg
cmVjZWl2ZSBkZWNvbXByZXNzb3IgKi8KLSNkZWZpbmUgUFBQSU9fWEFDQ00JX1BQUElPKDEz
OCkJLyogc2V0IHRyYW5zbWl0IGFzeW5jbWFwICovCi0jZGVmaW5lIFBQUElPX1JBQ0NNCV9Q
UFBJTygxMzkpCS8qIHNldCByZWNlaXZlIGFzeW5jbWFwICovCi0jZGVmaW5lIFBQUElPX1ZK
SU5JVAlfUFBQSU8oMTQwKQkvKiBpbml0aWFsaXplIFZKIGNvbXAvZGVjb21wICovCi0jZGVm
aW5lIFBQUElPX0FUVEFDSAlfUFBQSU8oMTQxKQkvKiBhdHRhY2ggdG8gYSBwcGEgKHdpdGhv
dXQgcHV0bXNnKSAqLwotI2RlZmluZSBQUFBJT19MQVNUTU9ECV9QUFBJTygxNDIpCS8qIG1h
cmsgbGFzdCBwcHAgbW9kdWxlICovCi0jZGVmaW5lIFBQUElPX0dDTEVBTglfUFBQSU8oMTQz
KQkvKiBnZXQgOC1iaXQtY2xlYW4gZmxhZ3MgKi8KLSNkZWZpbmUgUFBQSU9fREVCVUcJX1BQ
UElPKDE0NCkJLyogcmVxdWVzdCBkZWJ1ZyBpbmZvcm1hdGlvbiAqLwotI2RlZmluZSBQUFBJ
T19CSU5ECV9QUFBJTygxNDUpCS8qIGJpbmQgdG8gU0FQICovCi0jZGVmaW5lIFBQUElPX05Q
TU9ERQlfUFBQSU8oMTQ2KQkvKiBzZXQgbW9kZSBmb3IgaGFuZGxpbmcgZGF0YSBwa3RzICov
Ci0jZGVmaW5lIFBQUElPX0dJRExFCV9QUFBJTygxNDcpCS8qIGdldCB0aW1lIHNpbmNlIGxh
c3QgZGF0YSBwa3QgKi8KLSNkZWZpbmUgUFBQSU9fUEFTU0ZJTFQJX1BQUElPKDE0OCkJLyog
c2V0IGZpbHRlciBmb3IgcGFja2V0cyB0byBwYXNzICovCi0jZGVmaW5lIFBQUElPX0FDVElW
RUZJTFQgX1BQUElPKDE0OSkJLyogc2V0IGZpbHRlciBmb3IgImxpbmsgYWN0aXZlIiBwa3Rz
ICovCi0KLS8qCi0gKiBWYWx1ZXMgZm9yIFBQUElPX0NGTEFHUwotICovCi0jZGVmaW5lIENP
TVBfQUMJCTB4MQkJLyogY29tcHJlc3MgYWRkcmVzcy9jb250cm9sICovCi0jZGVmaW5lIERF
Q09NUF9BQwkweDIJCS8qIGRlY29tcHJlc3MgYWRkcmVzcy9jb250cm9sICovCi0jZGVmaW5l
IENPTVBfUFJPVAkweDQJCS8qIGNvbXByZXNzIFBQUCBwcm90b2NvbCAqLwotI2RlZmluZSBE
RUNPTVBfUFJPVAkweDgJCS8qIGRlY29tcHJlc3MgUFBQIHByb3RvY29sICovCi0KLSNkZWZp
bmUgQ09NUF9WSkMJMHgxMAkJLyogY29tcHJlc3MgVENQL0lQIGhlYWRlcnMgKi8KLSNkZWZp
bmUgQ09NUF9WSkNDSUQJMHgyMAkJLyogY29tcHJlc3MgY29ubmVjdGlvbiBJRCBhcyB3ZWxs
ICovCi0jZGVmaW5lIERFQ09NUF9WSkMJMHg0MAkJLyogZGVjb21wcmVzcyBUQ1AvSVAgaGVh
ZGVycyAqLwotI2RlZmluZSBERUNPTVBfVkpDQ0lECTB4ODAJCS8qIGFjY2VwdCBjb21wcmVz
c2VkIGNvbm5lY3Rpb24gSUQgKi8KLQotI2RlZmluZSBDQ1BfSVNPUEVOCTB4MTAwCQkvKiBs
b29rIGF0IENDUCBwYWNrZXRzICovCi0jZGVmaW5lIENDUF9JU1VQCTB4MjAwCQkvKiBkbyBw
YWNrZXQgY29tcC9kZWNvbXAgKi8KLSNkZWZpbmUgQ0NQX0VSUk9SCTB4NDAwCQkvKiAoc3Rh
dHVzKSBlcnJvciBpbiBwYWNrZXQgZGVjb21wICovCi0jZGVmaW5lIENDUF9GQVRBTEVSUk9S
CTB4ODAwCQkvKiAoc3RhdHVzKSBmYXRhbCBlcnJvciBkaXR0byAqLwotI2RlZmluZSBDQ1Bf
Q09NUF9SVU4JMHgxMDAwCQkvKiAoc3RhdHVzKSBzZWVuIENDUCBhY2sgc2VudCAqLwotI2Rl
ZmluZSBDQ1BfREVDT01QX1JVTgkweDIwMDAJCS8qIChzdGF0dXMpIHNlZW4gQ0NQIGFjayBy
Y3ZkICovCi0KLS8qCi0gKiBWYWx1ZXMgZm9yIDgtYml0LWNsZWFuIGZsYWdzLgotICovCi0j
ZGVmaW5lIFJDVl9CN18wCTEJCS8qIGhhdmUgcmN2ZCBjaGFyIHdpdGggYml0IDcgPSAwICov
Ci0jZGVmaW5lIFJDVl9CN18xCTIJCS8qIGhhdmUgcmN2ZCBjaGFyIHdpdGggYml0IDcgPSAx
ICovCi0jZGVmaW5lIFJDVl9FVk5QCTQJCS8qIGhhdmUgcmN2ZCBjaGFyIHdpdGggZXZlbiBw
YXJpdHkgKi8KLSNkZWZpbmUgUkNWX09ERFAJOAkJLyogaGF2ZSByY3ZkIGNoYXIgd2l0aCBv
ZGQgcGFyaXR5ICovCi0KLS8qCi0gKiBWYWx1ZXMgZm9yIHRoZSBmaXJzdCBieXRlIG9mIE1f
Q1RMIG1lc3NhZ2VzIHBhc3NlZCBiZXR3ZWVuCi0gKiBQUFAgbW9kdWxlcy4KLSAqLwotI2Rl
ZmluZSBQUFBDVExfT0VSUk9SCTB4ZTAJCS8qIG91dHB1dCBlcnJvciBbdXBdICovCi0jZGVm
aW5lIFBQUENUTF9JRVJST1IJMHhlMQkJLyogaW5wdXQgZXJyb3IgKGUuZy4gRkNTKSBbdXBd
ICovCi0jZGVmaW5lIFBQUENUTF9NVFUJMHhlMgkJLyogc2V0IE1UVSBbZG93bl0gKi8KLSNk
ZWZpbmUgUFBQQ1RMX01SVQkweGUzCQkvKiBzZXQgTVJVIFtkb3duXSAqLwotI2RlZmluZSBQ
UFBDVExfVU5JVAkweGU0CQkvKiBub3RlIFBQUCB1bml0IG51bWJlciBbZG93bl0gKi8KLQot
LyoKLSAqIFZhbHVlcyBmb3IgdGhlIGludGVnZXIgYXJndW1lbnQgdG8gUFBQSU9fREVCVUcu
Ci0gKi8KLSNkZWZpbmUgUFBQREJHX0RVTVAJMHgxMDAwMAkJLyogcHJpbnQgb3V0IGRlYnVn
IGluZm8gbm93ICovCi0jZGVmaW5lIFBQUERCR19MT0cJMHgxMDAJCS8qIGxvZyB2YXJpb3Vz
IHRoaW5ncyAqLwotI2RlZmluZSBQUFBEQkdfRFJJVkVSCTAJCS8qIGlkZW50aWZpZXMgcHBw
IGRyaXZlciBhcyB0YXJnZXQgKi8KLSNkZWZpbmUgUFBQREJHX0lGCTEJCS8qIGlkZW50aWZp
ZXMgcHBwIG5ldHdvcmsgaS9mIHRhcmdldCAqLwotI2RlZmluZSBQUFBEQkdfQ09NUAkyCQkv
KiBpZGVudGlmaWVzIHBwcCBjb21wcmVzc2lvbiB0YXJnZXQgKi8KLSNkZWZpbmUgUFBQREJH
X0FIRExDCTMJCS8qIGlkZW50aWZpZXMgcHBwIGFzeW5jIGhkbGMgdGFyZ2V0ICovCmRpZmYg
LS1naXQgYS9pbmNsdWRlL25ldC92amNvbXByZXNzLmggYi9pbmNsdWRlL25ldC92amNvbXBy
ZXNzLmgKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IGJhMWVlMWYuLjAwMDAwMDAK
LS0tIGEvaW5jbHVkZS9uZXQvdmpjb21wcmVzcy5oCisrKyAvZGV2L251bGwKQEAgLTEsMTQ0
ICswLDAgQEAKLS8qCi0gKiBEZWZpbml0aW9ucyBmb3IgdGNwIGNvbXByZXNzaW9uIHJvdXRp
bmVzLgotICoKLSAqICRJZDogdmpjb21wcmVzcy5oLHYgMS4zIDE5OTYvMDUvMjggMDA6NTU6
MzMgcGF1bHVzIEV4cCAkCi0gKgotICogQ29weXJpZ2h0IChjKSAxOTg5IFJlZ2VudHMgb2Yg
dGhlIFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYS4KLSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
Ci0gKgotICogUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBm
b3JtcyBhcmUgcGVybWl0dGVkCi0gKiBwcm92aWRlZCB0aGF0IHRoZSBhYm92ZSBjb3B5cmln
aHQgbm90aWNlIGFuZCB0aGlzIHBhcmFncmFwaCBhcmUKLSAqIGR1cGxpY2F0ZWQgaW4gYWxs
IHN1Y2ggZm9ybXMgYW5kIHRoYXQgYW55IGRvY3VtZW50YXRpb24sCi0gKiBhZHZlcnRpc2lu
ZyBtYXRlcmlhbHMsIGFuZCBvdGhlciBtYXRlcmlhbHMgcmVsYXRlZCB0byBzdWNoCi0gKiBk
aXN0cmlidXRpb24gYW5kIHVzZSBhY2tub3dsZWRnZSB0aGF0IHRoZSBzb2Z0d2FyZSB3YXMg
ZGV2ZWxvcGVkCi0gKiBieSB0aGUgVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhLCBCZXJrZWxl
eS4gIFRoZSBuYW1lIG9mIHRoZQotICogVW5pdmVyc2l0eSBtYXkgbm90IGJlIHVzZWQgdG8g
ZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQKLSAqIGZyb20gdGhpcyBzb2Z0
d2FyZSB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi4KLSAqIFRI
SVMgU09GVFdBUkUgSVMgUFJPVklERUQgYGBBUyBJUycnIEFORCBXSVRIT1VUIEFOWSBFWFBS
RVNTIE9SCi0gKiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgV0lUSE9VVCBMSU1J
VEFUSU9OLCBUSEUgSU1QTElFRAotICogV0FSUkFOVElFUyBPRiBNRVJDSEFOVElCSUxJVFkg
QU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLgotICoKLSAqCVZhbiBKYWNv
YnNvbiAodmFuQGhlbGlvcy5lZS5sYmwuZ292KSwgRGVjIDMxLCAxOTg5OgotICoJLSBJbml0
aWFsIGRpc3RyaWJ1dGlvbi4KLSAqLwotCi0jaWZuZGVmIF9WSkNPTVBSRVNTX0hfCi0jZGVm
aW5lIF9WSkNPTVBSRVNTX0hfCi0KLSNkZWZpbmUgTUFYX1NUQVRFUyAxNgkJLyogbXVzdCBi
ZSA+IDIgYW5kIDwgMjU2ICovCi0jZGVmaW5lIE1BWF9IRFIJICAgMTI4Ci0KLS8qCi0gKiBD
b21wcmVzc2VkIHBhY2tldCBmb3JtYXQ6Ci0gKgotICogVGhlIGZpcnN0IG9jdGV0IGNvbnRh
aW5zIHRoZSBwYWNrZXQgdHlwZSAodG9wIDMgYml0cyksIFRDUAotICogJ3B1c2gnIGJpdCwg
YW5kIGZsYWdzIHRoYXQgaW5kaWNhdGUgd2hpY2ggb2YgdGhlIDQgVENQIHNlcXVlbmNlCi0g
KiBudW1iZXJzIGhhdmUgY2hhbmdlZCAoYm90dG9tIDUgYml0cykuICBUaGUgbmV4dCBvY3Rl
dCBpcyBhCi0gKiBjb252ZXJzYXRpb24gbnVtYmVyIHRoYXQgYXNzb2NpYXRlcyBhIHNhdmVk
IElQL1RDUCBoZWFkZXIgd2l0aAotICogdGhlIGNvbXByZXNzZWQgcGFja2V0LiAgVGhlIG5l
eHQgdHdvIG9jdGV0cyBhcmUgdGhlIFRDUCBjaGVja3N1bQotICogZnJvbSB0aGUgb3JpZ2lu
YWwgZGF0YWdyYW0uICBUaGUgbmV4dCAwIHRvIDE1IG9jdGV0cyBhcmUKLSAqIHNlcXVlbmNl
IG51bWJlciBjaGFuZ2VzLCBvbmUgY2hhbmdlIHBlciBiaXQgc2V0IGluIHRoZSBoZWFkZXIK
LSAqICh0aGVyZSBtYXkgYmUgbm8gY2hhbmdlcyBhbmQgdGhlcmUgYXJlIHR3byBzcGVjaWFs
IGNhc2VzIHdoZXJlCi0gKiB0aGUgcmVjZWl2ZXIgaW1wbGljaXRseSBrbm93cyB3aGF0IGNo
YW5nZWQgLS0gc2VlIGJlbG93KS4KLSAqIAotICogVGhlcmUgYXJlIDUgbnVtYmVycyB3aGlj
aCBjYW4gY2hhbmdlICh0aGV5IGFyZSBhbHdheXMgaW5zZXJ0ZWQKLSAqIGluIHRoZSBmb2xs
b3dpbmcgb3JkZXIpOiBUQ1AgdXJnZW50IHBvaW50ZXIsIHdpbmRvdywKLSAqIGFja25vd2xl
Z2VtZW50LCBzZXF1ZW5jZSBudW1iZXIgYW5kIElQIElELiAgKFRoZSB1cmdlbnQgcG9pbnRl
cgotICogaXMgZGlmZmVyZW50IGZyb20gdGhlIG90aGVycyBpbiB0aGF0IGl0cyB2YWx1ZSBp
cyBzZW50LCBub3QgdGhlCi0gKiBjaGFuZ2UgaW4gdmFsdWUuKSAgU2luY2UgdHlwaWNhbCB1
c2Ugb2YgU0xJUCBsaW5rcyBpcyBiaWFzZWQKLSAqIHRvd2FyZCBzbWFsbCBwYWNrZXRzIChz
ZWUgY29tbWVudHMgb24gTVRVL01TUyBiZWxvdyksIGNoYW5nZXMKLSAqIHVzZSBhIHZhcmlh
YmxlIGxlbmd0aCBjb2Rpbmcgd2l0aCBvbmUgb2N0ZXQgZm9yIG51bWJlcnMgaW4gdGhlCi0g
KiByYW5nZSAxIC0gMjU1IGFuZCAzIG9jdGV0cyAoMCwgTVNCLCBMU0IpIGZvciBudW1iZXJz
IGluIHRoZQotICogcmFuZ2UgMjU2IC0gNjU1MzUgb3IgMC4gIChJZiB0aGUgY2hhbmdlIGlu
IHNlcXVlbmNlIG51bWJlciBvcgotICogYWNrIGlzIG1vcmUgdGhhbiA2NTUzNSwgYW4gdW5j
b21wcmVzc2VkIHBhY2tldCBpcyBzZW50LikKLSAqLwotCi0vKgotICogUGFja2V0IHR5cGVz
IChtdXN0IG5vdCBjb25mbGljdCB3aXRoIElQIHByb3RvY29sIHZlcnNpb24pCi0gKgotICog
VGhlIHRvcCBuaWJibGUgb2YgdGhlIGZpcnN0IG9jdGV0IGlzIHRoZSBwYWNrZXQgdHlwZS4g
IFRoZXJlIGFyZQotICogdGhyZWUgcG9zc2libGUgdHlwZXM6IElQIChub3QgcHJvdG8gVENQ
IG9yIHRjcCB3aXRoIG9uZSBvZiB0aGUKLSAqIGNvbnRyb2wgZmxhZ3Mgc2V0KTsgdW5jb21w
cmVzc2VkIFRDUCAoYSBub3JtYWwgSVAvVENQIHBhY2tldCBidXQKLSAqIHdpdGggdGhlIDgt
Yml0IHByb3RvY29sIGZpZWxkIHJlcGxhY2VkIGJ5IGFuIDgtYml0IGNvbm5lY3Rpb24gaWQg
LS0KLSAqIHRoaXMgdHlwZSBvZiBwYWNrZXQgc3luY3MgdGhlIHNlbmRlciAmIHJlY2VpdmVy
KTsgYW5kIGNvbXByZXNzZWQKLSAqIFRDUCAoZGVzY3JpYmVkIGFib3ZlKS4KLSAqCi0gKiBM
U0Igb2YgNC1iaXQgZmllbGQgaXMgVENQICJQVVNIIiBiaXQgKGEgd29ydGhsZXNzIGFuYWNo
cm9uaXNtKSBhbmQKLSAqIGlzIGxvZ2ljYWxseSBwYXJ0IG9mIHRoZSA0LWJpdCAiY2hhbmdl
cyIgZmllbGQgdGhhdCBmb2xsb3dzLiAgVG9wCi0gKiB0aHJlZSBiaXRzIGFyZSBhY3R1YWwg
cGFja2V0IHR5cGUuICBGb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eQotICogYW5kIGluIHRo
ZSBpbnRlcmVzdCBvZiBjb25zZXJ2aW5nIGJpdHMsIG51bWJlcnMgYXJlIGNob3NlbiBzbyB0
aGUKLSAqIElQIHByb3RvY29sIHZlcnNpb24gbnVtYmVyICg0KSB3aGljaCBub3JtYWxseSBh
cHBlYXJzIGluIHRoaXMgbmliYmxlCi0gKiBtZWFucyAiSVAgcGFja2V0Ii4KLSAqLwotCi0v
KiBwYWNrZXQgdHlwZXMgKi8KLSNkZWZpbmUgVFlQRV9JUCAweDQwCi0jZGVmaW5lIFRZUEVf
VU5DT01QUkVTU0VEX1RDUCAweDcwCi0jZGVmaW5lIFRZUEVfQ09NUFJFU1NFRF9UQ1AgMHg4
MAotI2RlZmluZSBUWVBFX0VSUk9SIDB4MDAKLQotLyogQml0cyBpbiBmaXJzdCBvY3RldCBv
ZiBjb21wcmVzc2VkIHBhY2tldCAqLwotI2RlZmluZSBORVdfQwkweDQwCS8qIGZsYWcgYml0
cyBmb3Igd2hhdCBjaGFuZ2VkIGluIGEgcGFja2V0ICovCi0jZGVmaW5lIE5FV19JCTB4MjAK
LSNkZWZpbmUgTkVXX1MJMHgwOAotI2RlZmluZSBORVdfQQkweDA0Ci0jZGVmaW5lIE5FV19X
CTB4MDIKLSNkZWZpbmUgTkVXX1UJMHgwMQotCi0vKiByZXNlcnZlZCwgc3BlY2lhbC1jYXNl
IHZhbHVlcyBvZiBhYm92ZSAqLwotI2RlZmluZSBTUEVDSUFMX0kgKE5FV19TfE5FV19XfE5F
V19VKQkJLyogZWNob2VkIGludGVyYWN0aXZlIHRyYWZmaWMgKi8KLSNkZWZpbmUgU1BFQ0lB
TF9EIChORVdfU3xORVdfQXxORVdfV3xORVdfVSkJLyogdW5pZGlyZWN0aW9uYWwgZGF0YSAq
LwotI2RlZmluZSBTUEVDSUFMU19NQVNLIChORVdfU3xORVdfQXxORVdfV3xORVdfVSkKLQot
I2RlZmluZSBUQ1BfUFVTSF9CSVQgMHgxMAotCi0KLS8qCi0gKiAic3RhdGUiIGRhdGEgZm9y
IGVhY2ggYWN0aXZlIHRjcCBjb252ZXJzYXRpb24gb24gdGhlIHdpcmUuICBUaGlzIGlzCi0g
KiBiYXNpY2FsbHkgYSBjb3B5IG9mIHRoZSBlbnRpcmUgSVAvVENQIGhlYWRlciBmcm9tIHRo
ZSBsYXN0IHBhY2tldAotICogd2Ugc2F3IGZyb20gdGhlIGNvbnZlcnNhdGlvbiB0b2dldGhl
ciB3aXRoIGEgc21hbGwgaWRlbnRpZmllcgotICogdGhlIHRyYW5zbWl0ICYgcmVjZWl2ZSBl
bmRzIG9mIHRoZSBsaW5lIHVzZSB0byBsb2NhdGUgc2F2ZWQgaGVhZGVyLgotICovCi1zdHJ1
Y3QgY3N0YXRlIHsKLSAgICBzdHJ1Y3QgY3N0YXRlICpjc19uZXh0OwkvKiBuZXh0IG1vc3Qg
cmVjZW50bHkgdXNlZCBzdGF0ZSAoeG1pdCBvbmx5KSAqLwotICAgIHVfc2hvcnQgY3NfaGxl
bjsJCS8qIHNpemUgb2YgaGRyIChyZWNlaXZlIG9ubHkpICovCi0gICAgdV9jaGFyIGNzX2lk
OwkJLyogY29ubmVjdGlvbiAjIGFzc29jaWF0ZWQgd2l0aCB0aGlzIHN0YXRlICovCi0gICAg
dV9jaGFyIGNzX2ZpbGxlcjsKLSAgICB1bmlvbiB7Ci0JY2hhciBjc3VfaGRyW01BWF9IRFJd
OwotCXN0cnVjdCBpcCBjc3VfaXA7CS8qIGlwL3RjcCBoZHIgZnJvbSBtb3N0IHJlY2VudCBw
YWNrZXQgKi8KLSAgICB9IHZqY3NfdTsKLX07Ci0jZGVmaW5lIGNzX2lwIHZqY3NfdS5jc3Vf
aXAKLSNkZWZpbmUgY3NfaGRyIHZqY3NfdS5jc3VfaGRyCi0KLS8qCi0gKiBhbGwgdGhlIHN0
YXRlIGRhdGEgZm9yIG9uZSBzZXJpYWwgbGluZSAod2UgbmVlZCBvbmUgb2YgdGhlc2UgcGVy
IGxpbmUpLgotICovCi1zdHJ1Y3Qgdmpjb21wcmVzcyB7Ci0gICAgc3RydWN0IGNzdGF0ZSAq
bGFzdF9jczsJLyogbW9zdCByZWNlbnRseSB1c2VkIHRzdGF0ZSAqLwotICAgIHVfY2hhciBs
YXN0X3JlY3Y7CQkvKiBsYXN0IHJjdmQgY29ubi4gaWQgKi8KLSAgICB1X2NoYXIgbGFzdF94
bWl0OwkJLyogbGFzdCBzZW50IGNvbm4uIGlkICovCi0gICAgdV9zaG9ydCBmbGFnczsKLSNp
Zm5kZWYgVkpfTk9fU1RBVFMKLSAgICBzdHJ1Y3QgdmpzdGF0IHN0YXRzOwotI2VuZGlmCi0g
ICAgc3RydWN0IGNzdGF0ZSB0c3RhdGVbTUFYX1NUQVRFU107CS8qIHhtaXQgY29ubmVjdGlv
biBzdGF0ZXMgKi8KLSAgICBzdHJ1Y3QgY3N0YXRlIHJzdGF0ZVtNQVhfU1RBVEVTXTsJLyog
cmVjZWl2ZSBjb25uZWN0aW9uIHN0YXRlcyAqLwotfTsKLQotLyogZmxhZyB2YWx1ZXMgKi8K
LSNkZWZpbmUgVkpGX1RPU1MgMQkJLyogdG9zc2luZyByY3ZkIGZyYW1lcyBiZWNhdXNlIG9m
IGlucHV0IGVyciAqLwotCi1leHRlcm4gdm9pZCAgdmpfY29tcHJlc3NfaW5pdChzdHJ1Y3Qg
dmpjb21wcmVzcyAqY29tcCwgaW50IG1heF9zdGF0ZSk7Ci1leHRlcm4gdV9pbnQgdmpfY29t
cHJlc3NfdGNwKHN0cnVjdCBpcCAqaXAsIHVfaW50IG1sZW4sCi0JCQkJc3RydWN0IHZqY29t
cHJlc3MgKmNvbXAsIGludCBjb21wcmVzc19jaWRfZmxhZywKLQkJCQl1X2NoYXIgKip2amhk
cnApOwotZXh0ZXJuIHZvaWQgIHZqX3VuY29tcHJlc3NfZXJyKHN0cnVjdCB2amNvbXByZXNz
ICpjb21wKTsKLWV4dGVybiBpbnQgICB2al91bmNvbXByZXNzX3VuY29tcCh1X2NoYXIgKmJ1
ZiwgaW50IGJ1ZmxlbiwKLQkJCQlzdHJ1Y3Qgdmpjb21wcmVzcyAqY29tcCk7Ci1leHRlcm4g
aW50ICAgdmpfdW5jb21wcmVzc190Y3AodV9jaGFyICpidWYsIGludCBidWZsZW4sIGludCB0
b3RhbF9sZW4sCi0JCQkJc3RydWN0IHZqY29tcHJlc3MgKmNvbXAsIHVfY2hhciAqKmhkcnAs
Ci0JCQkJdV9pbnQgKmhsZW5wKTsKLQotI2VuZGlmIC8qIF9WSkNPTVBSRVNTX0hfICovCmRp
ZmYgLS1naXQgYS9wcHBkL2NjcC5jIGIvcHBwZC9jY3AuYwppbmRleCAzYzI4NjgyLi5mMDMx
MWIwIDEwMDY0NAotLS0gYS9wcHBkL2NjcC5jCisrKyBiL3BwcGQvY2NwLmMKQEAgLTY4NSw3
ICs2ODUsMTAgQEAgc3RhdGljIGludAogCSsgKGdvLT5kZWZsYXRlICYmIGdvLT5kZWZsYXRl
X2RyYWZ0PyBDSUxFTl9ERUZMQVRFOiAwKQogCSsgKGdvLT5wcmVkaWN0b3JfMT8gQ0lMRU5f
UFJFRElDVE9SXzE6IDApCiAJKyAoZ28tPnByZWRpY3Rvcl8yPyBDSUxFTl9QUkVESUNUT1Jf
MjogMCkKLQkrIChnby0+bXBwZT8gQ0lMRU5fTVBQRTogMCk7CisjaWZkZWYgUFBQX1dJVEhf
TVBQRQorCSsgKGdvLT5tcHBlPyBDSUxFTl9NUFBFOiAwKQorI2VuZGlmCisgICAgICAgIDsK
IH0KIAogLyoKZGlmZiAtLWdpdCBhL3BwcGQvcHBwZC1wcml2YXRlLmggYi9wcHBkL3BwcGQt
cHJpdmF0ZS5oCmluZGV4IDU2MWM1NDEuLmExZGIzNGQgMTAwNjQ0Ci0tLSBhL3BwcGQvcHBw
ZC1wcml2YXRlLmgKKysrIGIvcHBwZC9wcHBkLXByaXZhdGUuaApAQCAtNjUsNyArNjUsMTEg
QEAKICAqIFdoZXJlIHNob3VsZCBQUFBfRFJWX05BTUUgY29tZSBmcm9tPyBEbyB3ZSBpbmNs
dWRlIGl0IGhlcmU/CiAgKi8KICNpZiAhZGVmaW5lZChQUFBfRFJWX05BTUUpCisjaWYgZGVm
aW5lZChTT0wyKQorI2RlZmluZSBQUFBfRFJWX05BTUUJInNwcHAiCisjZWxzZQogI2RlZmlu
ZSBQUFBfRFJWX05BTUUJInBwcCIKKyNlbmRpZiAvKiBkZWZpbmVkKFNPTDIpICovCiAjZW5k
aWYgLyogIWRlZmluZWQoUFBQX0RSVl9OQU1FKSAqLwogCiAKZGlmZiAtLWdpdCBhL3BwcGQv
c3lzLXNvbGFyaXMuYyBiL3BwcGQvc3lzLXNvbGFyaXMuYwppbmRleCBiZTM2YjFiLi5lZWNm
NTBmIDEwMDY0NAotLS0gYS9wcHBkL3N5cy1zb2xhcmlzLmMKKysrIGIvcHBwZC9zeXMtc29s
YXJpcy5jCkBAIC05OSw5ICs5OSw2IEBACiAjaW5jbHVkZSA8ZmNudGwuaD4KICNpbmNsdWRl
IDx1bmlzdGQuaD4KICNpbmNsdWRlIDx0ZXJtaW9zLmg+Ci0jaWZuZGVmIENSVFNDVFMKLSNp
bmNsdWRlIDxzeXMvdGVybWlveC5oPgotI2VuZGlmCiAjaW5jbHVkZSA8c2lnbmFsLmg+CiAj
aW5jbHVkZSA8dXRtcHguaD4KICNpbmNsdWRlIDxzdHJvcHRzLmg+CkBAIC0xMjMsMTMgKzEy
MCwxMSBAQAogI2luY2x1ZGUgPG5ldC9wcHBfZGVmcy5oPgogI2luY2x1ZGUgPG5ldC9wcHBp
by5oPgogI2luY2x1ZGUgPG5ldGluZXQvaW4uaD4KLSNpZmRlZiBTT0wyCiAjaW5jbHVkZSA8
c3lzL3RpaGRyLmg+CiAjaW5jbHVkZSA8c3lzL3RpdXNlci5oPgogI2luY2x1ZGUgPGluZXQv
Y29tbW9uLmg+CiAjaW5jbHVkZSA8aW5ldC9taWIyLmg+CiAjaW5jbHVkZSA8c3lzL2V0aGVy
bmV0Lmg+Ci0jZW5kaWYKIAogI2lmZGVmIFBQUF9XSVRIX0ZJTFRFUgogI2luY2x1ZGUgPHBj
YXAuaD4KQEAgLTE0MCw0NSArMTM1LDI3IEBACiAjaW5jbHVkZSAibGNwLmgiCiAjaW5jbHVk
ZSAiaXBjcC5oIgogI2luY2x1ZGUgImNjcC5oIgotCi0jaWZkZWYgUFBQX1dJVEhfSVBWNkNQ
CiAjaW5jbHVkZSAiZXVpNjQuaCIKLSNlbmRpZgotCi0jaWYgIWRlZmluZWQoUFBQX0RSVl9O
QU1FKQotI2RlZmluZSBQUFBfRFJWX05BTUUJInBwcCIKLSNlbmRpZiAvKiAhZGVmaW5lZChQ
UFBfRFJWX05BTUUpICovCiAKICNpZiAhZGVmaW5lZChQUFBfREVWX05BTUUpCiAjZGVmaW5l
IFBQUF9ERVZfTkFNRQkiL2Rldi8iIFBQUF9EUlZfTkFNRQogI2VuZGlmIC8qICFkZWZpbmVk
KFBQUF9ERVZfTkFNRSkgKi8KIAogI2lmICFkZWZpbmVkKEFIRExDX01PRF9OQU1FKQotI2Rl
ZmluZSBBSERMQ19NT0RfTkFNRQkicHBwX2FoZGwiCisjZGVmaW5lIEFIRExDX01PRF9OQU1F
CSJzcHBwYXN5biIKICNlbmRpZiAvKiAhZGVmaW5lZChBSERMQ19NT0RfTkFNRSkgKi8KIAog
I2lmICFkZWZpbmVkKENPTVBfTU9EX05BTUUpCi0jZGVmaW5lIENPTVBfTU9EX05BTUUJInBw
cF9jb21wIgorI2RlZmluZSBDT01QX01PRF9OQU1FCSJzcHBwY29tcCIKICNlbmRpZiAvKiAh
ZGVmaW5lZChDT01QX01PRF9OQU1FKSAqLwogCi0jaWYgIWRlZmluZWQoSVBfREVWX05BTUUp
Ci0jZGVmaW5lCUlQX0RFVl9OQU1FCSIvZGV2L2lwIgotI2VuZGlmIC8qICFkZWZpbmVkKElQ
X0RFVl9OQU1FKSAqLwotCiAjaWYgIWRlZmluZWQoSVBfTU9EX05BTUUpCiAjZGVmaW5lCUlQ
X01PRF9OQU1FCSJpcCIKICNlbmRpZiAvKiAhZGVmaW5lZChJUF9NT0RfTkFNRSkgKi8KIAot
I2lmICFkZWZpbmVkKFVEUF9ERVZfTkFNRSkgJiYgZGVmaW5lZChTT0wyKQogI2RlZmluZQlV
RFBfREVWX05BTUUJIi9kZXYvdWRwIgotI2VuZGlmIC8qICFkZWZpbmVkKFVEUF9ERVZfTkFN
RSkgJiYgZGVmaW5lZChTT0wyKSAqLwotCi0jaWYgIWRlZmluZWQoVURQNl9ERVZfTkFNRSkg
JiYgZGVmaW5lZChTT0wyKQogI2RlZmluZQlVRFA2X0RFVl9OQU1FCSIvZGV2L3VkcDYiCi0j
ZW5kaWYgLyogIWRlZmluZWQoVURQNl9ERVZfTkFNRSkgJiYgZGVmaW5lZChTT0wyKSAqLwot
CiAKLSNpZiBkZWZpbmVkKFNPTDIpCiAvKgogICogIi9kZXYvdWRwIiBpcyB1c2VkIGFzIGEg
bXVsdGlwbGV4b3IgdG8gUExJTksgdGhlIGludGVyZmFjZSBzdHJlYW0KICAqIHVuZGVyLiBJ
dCBpcyB1c2VkIGluIHBsYWNlIG9mICIvZGV2L2lwIiBzaW5jZSBTVFJFQU1TIHdpbGwgbm90
IGxldApAQCAtMTg2LDE1ICsxNjMsMTAgQEAKICAqIGRyaXZlciBhdCB0aGUgYm90dG9tIG9m
IHRoZSB0dW5uZWxpbmcgaW50ZXJmYWNlcyBzdHJlYW0uCiAgKi8KIHN0YXRpYyBjaGFyICpt
dXhfZGV2X25hbWUgPSBVRFBfREVWX05BTUU7Ci0jZWxzZQotc3RhdGljIGNoYXIgKm11eF9k
ZXZfbmFtZSA9IElQX0RFVl9OQU1FOwotI2VuZGlmCiBzdGF0aWMgaW50CXBwcGZkOwogc3Rh
dGljIGludAlmZG11eGlkID0gLTE7CiBzdGF0aWMgaW50CWlwZmQ7CiBzdGF0aWMgaW50CWlw
bXV4aWQgPSAtMTsKLQotI2lmIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKSAmJiBkZWZpbmVk
KFNPTDIpCiBzdGF0aWMgaW50CWlwNmZkOwkJLyogSVAgZmlsZSBkZXNjcmlwdG9yICovCiBz
dGF0aWMgaW50CWlwNm11eGlkID0gLTE7CS8qIE11bHRpcGxleGVyIGZpbGUgZGVzY3JpcHRv
ciAqLwogc3RhdGljIGludAlpZjZfaXNfdXAgPSAwOwkvKiBJUHY2IGludGVyZmFjZSBoYXMg
YmVlbiBtYXJrZWQgdXAgKi8KQEAgLTIyOCwxOCArMjAwLDggQEAgc3RhdGljIGludAlpZjZf
aXNfdXAgPSAwOwkvKiBJUHY2IGludGVyZmFjZSBoYXMgYmVlbiBtYXJrZWQgdXAgKi8KICNk
ZWZpbmUgSU42QV9MTEFERFJfRlJPTV9FVUk2NChzLCBldWk2NCkgIFwKICAgICBfSU42QV9M
TFhfRlJPTV9FVUk2NChzLCBldWk2NCwgMHhmZTgwMDAwMCkKIAotI2VuZGlmIC8qIGRlZmlu
ZWQoUFBQX1dJVEhfSVBWNkNQKSAmJiBkZWZpbmVkKFNPTDIpICovCi0KLSNpZiAhZGVmaW5l
ZChQUFBfV0lUSF9JUFY2Q1ApIHx8ICFkZWZpbmVkKFNPTDIpCi0jZGVmaW5lIE1BWElGUwkJ
MjU2CQkJLyogTWF4ICMgb2YgaW50ZXJmYWNlcyAqLwotI2VuZGlmIC8qIGRlZmluZWQoUFBQ
X1dJVEhfSVBWNkNQKSAmJiBkZWZpbmVkKFNPTDIpICovCi0KIHN0YXRpYyBpbnQJcmVzdG9y
ZV90ZXJtOwogc3RhdGljIHN0cnVjdCB0ZXJtaW9zIGluaXR0ZXJtaW9zOwotI2lmbmRlZiBD
UlRTQ1RTCi1zdGF0aWMgc3RydWN0IHRlcm1pb3ggaW5pdHRlcm1pb3g7Ci1zdGF0aWMgaW50
CXRlcm1pb3hfb2s7Ci0jZW5kaWYKIHN0YXRpYyBzdHJ1Y3Qgd2luc2l6ZSB3c2luZm87CS8q
IEluaXRpYWwgd2luZG93IHNpemUgaW5mbyAqLwogc3RhdGljIHBpZF90CXR0eV9zaWQ7CS8q
IG9yaWdpbmFsIHNlc3Npb24gSUQgZm9yIHRlcm1pbmFsICovCiAKQEAgLTI3Myw3ICsyMzUs
NiBAQCBzdGF0aWMgaW50IGRscGlfaW5mb19yZXEoaW50KTsKIHN0YXRpYyBpbnQgZGxwaV9n
ZXRfcmVwbHkoaW50LCB1bmlvbiBETF9wcmltaXRpdmVzICosIGludCwgc2l6ZV90KTsKIHN0
YXRpYyBpbnQgc3RyaW9jdGwoaW50LCBpbnQsIHZvaWQgKiwgaW50LCBpbnQpOwogCi0jaWZk
ZWYgU09MMgogLyoKICAqIHNpZnBwYSAtIFNldHMgaW50ZXJmYWNlIHBwYQogICoKQEAgLTI5
OSwxNCArMjYwLDEwIEBAIHNpZnBwYShmZCwgcHBhKQogewogICAgIHJldHVybiAoaW50KWlv
Y3RsKGZkLCBJRl9VTklUU0VMLCAoY2hhciAqKSZwcGEpOwogfQotI2VuZGlmIC8qIFNPTDIg
Ki8KIAotI2lmIGRlZmluZWQoU09MMikgJiYgZGVmaW5lZChQUFBfV0lUSF9JUFY2Q1ApCiAv
KgogICogZ2V0X2ZpcnN0X2V0aGVyX2h3YWRkciAtIGdldCB0aGUgaGFyZHdhcmUgYWRkcmVz
cyBmb3IgdGhlIGZpcnN0CiAgKiBldGhlcm5ldC1zdHlsZSBpbnRlcmZhY2Ugb24gdGhpcyBz
eXN0ZW0uCi0gKgotICogTk9URTogVGhpcyBpcyB0aGUgbGlmcmVxIHZlcnNpb24gKFNvbGFy
aXMgOCBhbmQgYWJvdmUpCiAgKi8KIGludAogZ2V0X2ZpcnN0X2V0aGVyX2h3YWRkcih1X2No
YXIgKmFkZHIpCkBAIC0zOTUsOTUgKzM1Miw3IEBAIGdldF9maXJzdF9ldGhlcl9od2FkZHIo
dV9jaGFyICphZGRyKQogICAgIGVsc2UKIAlyZXR1cm4gLTE7CiB9Ci0jZWxzZQotLyoKLSAq
IGdldF9maXJzdF9ldGhlcl9od2FkZHIgLSBnZXQgdGhlIGhhcmR3YXJlIGFkZHJlc3MgZm9y
IHRoZSBmaXJzdAotICogZXRoZXJuZXQtc3R5bGUgaW50ZXJmYWNlIG9uIHRoaXMgc3lzdGVt
LgotICoKLSAqIE5PVEU6IFRoaXMgaXMgdGhlIGlmcmVxIHZlcnNpb24gKGJlZm9yZSBTb2xh
cmlzIDgpLiAKLSAqLwotaW50Ci1nZXRfZmlyc3RfZXRoZXJfaHdhZGRyKHVfY2hhciAqYWRk
cikKLXsKLSAgICBzdHJ1Y3QgaWZjb25mIGlmYzsKLSAgICBzdHJ1Y3QgaWZyZXEgKnBpZnJl
cTsKLSAgICBzdHJ1Y3QgaWZyZXEgaWZyOwotICAgIGludAlmZCwgbnVtX2lmcywgaSwgZm91
bmQ7Ci0gICAgdWludF90IGZsLCByZXFfc2l6ZTsKLSAgICBjaGFyICpyZXE7Ci0KLSAgICBm
ZCA9IHNvY2tldChBRl9JTkVULCBTT0NLX0RHUkFNLCAwKTsKLSAgICBpZiAoZmQgPCAwKSB7
Ci0JcmV0dXJuIC0xOwotICAgIH0KLQotICAgIC8qCi0gICAgICogRmluZCBvdXQgaG93IG1h
bnkgaW50ZXJmYWNlcyBhcmUgcnVubmluZwotICAgICAqLwotICAgIGlmIChpb2N0bChmZCwg
U0lPQ0dJRk5VTSwgKGNoYXIgKikmbnVtX2lmcykgPCAwKSB7Ci0JbnVtX2lmcyA9IE1BWElG
UzsKLSAgICB9Ci0KLSAgICByZXFfc2l6ZSA9IG51bV9pZnMgKiBzaXplb2Yoc3RydWN0IGlm
cmVxKTsKLSAgICByZXEgPSBtYWxsb2MocmVxX3NpemUpOwotICAgIGlmIChyZXEgPT0gTlVM
TCkgewotCWNsb3NlKGZkKTsKLQllcnJvcigib3V0IG9mIG1lbW9yeSIpOwotCXJldHVybiAt
MTsKLSAgICB9Ci0KLSAgICAvKgotICAgICAqIEdldCBpbnRlcmZhY2UgY29uZmlndXJhdGlv
biBpbmZvIGZvciBhbGwgaW50ZXJmYWNlcwotICAgICAqLwotICAgIGlmYy5pZmNfbGVuID0g
cmVxX3NpemU7Ci0gICAgaWZjLmlmY19idWYgPSByZXE7Ci0gICAgaWYgKGlvY3RsKGZkLCBT
SU9DR0lGQ09ORiwgJmlmYykgPCAwKSB7Ci0JY2xvc2UoZmQpOwotCWZyZWUocmVxKTsKLQll
cnJvcigiU0lPQ0dJRkNPTkY6ICVtIik7Ci0JcmV0dXJuIC0xOwotICAgIH0KLQotICAgIC8q
Ci0gICAgICogQW5kIHRyYXZlcnNlIGVhY2ggaW50ZXJmYWNlIHRvIGxvb2sgc3BlY2lmaWNh
bGx5IGZvciB0aGUgZmlyc3QKLSAgICAgKiBvY2N1cmVuY2Ugb2YgYW4gRXRoZXJuZXQgaW50
ZXJmYWNlIHdoaWNoIGhhcyBiZWVuIG1hcmtlZCB1cAotICAgICAqLwotICAgIHBpZnJlcSA9
IGlmYy5pZmNfcmVxOwotICAgIGZvdW5kID0gMDsKLSAgICBmb3IgKGkgPSBpZmMuaWZjX2xl
biAvIHNpemVvZihzdHJ1Y3QgaWZyZXEpOyBpID4gMDsgaS0tLCBwaWZyZXErKykgewotCi0J
aWYgKHN0cmNocihwaWZyZXEtPmlmcl9uYW1lLCAnOicpICE9IE5VTEwpCi0JICAgIGNvbnRp
bnVlOwotCi0JbWVtc2V0KCZpZnIsIDAsIHNpemVvZihpZnIpKTsKLQlzdHJuY3B5KGlmci5p
ZnJfbmFtZSwgcGlmcmVxLT5pZnJfbmFtZSwgc2l6ZW9mKGlmci5pZnJfbmFtZSkpOwotCWlm
IChpb2N0bChmZCwgU0lPQ0dJRkZMQUdTLCAmaWZyKSA8IDApIHsKLQkgICAgZXJyb3IoIlNJ
T0NHSUZGTEFHUzogJW0iKTsKLQkgICAgYnJlYWs7Ci0JfQotCWZsID0gaWZyLmlmcl9mbGFn
czsKLQotCWlmICgoZmwgJiAoSUZGX1VQfElGRl9CUk9BRENBU1R8SUZGX1BPSU5UT1BPSU5U
fElGRl9MT09QQkFDS3xJRkZfTk9BUlApKQotCQkhPSAoSUZGX1VQIHwgSUZGX0JST0FEQ0FT
VCkpCi0JICAgIGNvbnRpbnVlOwotCi0JaWYgKGdldF9pZl9od2FkZHIoYWRkciwgaWZyLmlm
cl9uYW1lKSA8IDApCi0JICAgIGNvbnRpbnVlOwotCi0JZm91bmQgPSAxOwotCWJyZWFrOwot
ICAgIH0KLSAgICBmcmVlKHJlcSk7Ci0gICAgY2xvc2UoZmQpOwotCi0gICAgaWYgKGZvdW5k
KQotCXJldHVybiAwOwotICAgIGVsc2UKLQlyZXR1cm4gLTE7Ci19Ci0jZW5kaWYgLyogZGVm
aW5lZChTT0wyKSAmJiBkZWZpbmVkKFBQUF9XSVRIX0lQVjZDUCkgKi8KIAotI2lmIGRlZmlu
ZWQoU09MMikKIC8qCiAgKiBnZXRfaWZfaHdhZGRyIC0gZ2V0IHRoZSBoYXJkd2FyZSBhZGRy
ZXNzIGZvciB0aGUgc3BlY2lmaWVkCiAgKiBuZXR3b3JrIGludGVyZmFjZSBkZXZpY2UuCkBA
IC01MDgsOSArMzc3LDcgQEAgZ2V0X2lmX2h3YWRkcih1X2NoYXIgKmFkZHIsIGNoYXIgKmlm
X25hbWUpCiAgICAgbWVtY3B5KGFkZHIsIGV0aF9hZGRyLT5ldGhlcl9hZGRyX29jdGV0LCA2
KTsKICAgICByZXR1cm4gMTsKIH0KLSNlbmRpZiAvKiBTT0wyICovCiAKLSNpZiBkZWZpbmVk
KFNPTDIpICYmIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKQogLyoKICAqIHNsaWZuYW1lIC0g
U2V0cyBpbnRlcmZhY2UgcHBhIGFuZCBmbGFncwogICoKQEAgLTUzNywxMCArNDA0LDcgQEAg
c2xpZm5hbWUoaW50IGZkLCBpbnQgcHBhKQogCiBzbGlmbmFtZV9kb25lOgogICAgIHJldHVy
biByZXQ7Ci0KLQogfQotI2VuZGlmIC8qIGRlZmluZWQoU09MMikgJiYgZGVmaW5lZChQUFBf
V0lUSF9JUFY2Q1ApICovCiAKIC8qCiAgKiBzeXNfaW5pdCAtIFN5c3RlbS1kZXBlbmRlbnQg
aW5pdGlhbGl6YXRpb24uCkBAIC01NTAsMjYgKzQxNCwxNiBAQCBzeXNfaW5pdCh2b2lkKQog
ewogICAgIGludCBpZmQsIHg7CiAgICAgc3RydWN0IGlmcmVxIGlmcjsKLSNpZiBkZWZpbmVk
KFBQUF9XSVRIX0lQVjZDUCkgJiYgZGVmaW5lZChTT0wyKQogICAgIGludCBpNmZkOwogICAg
IHN0cnVjdCBsaWZyZXEgbGlmcjsKLSNlbmRpZiAvKiBkZWZpbmVkKFBQUF9XSVRIX0lQVjZD
UCkgJiYgZGVmaW5lZChTT0wyKSAqLwotI2lmICFkZWZpbmVkKFNPTDIpCi0gICAgc3RydWN0
IHsKLQl1bmlvbiBETF9wcmltaXRpdmVzIHByaW07Ci0JY2hhciBzcGFjZVs2NF07Ci0gICAg
fSByZXBseTsKLSNlbmRpZiAvKiAhZGVmaW5lZChTT0wyKSAqLwogCiAgICAgaXBmZCA9IG9w
ZW4obXV4X2Rldl9uYW1lLCBPX1JEV1IsIDApOwogICAgIGlmIChpcGZkIDwgMCkKIAlmYXRh
bCgiQ291bGRuJ3Qgb3BlbiBJUCBkZXZpY2U6ICVtIik7CiAKLSNpZiBkZWZpbmVkKFBQUF9X
SVRIX0lQVjZDUCkgJiYgZGVmaW5lZChTT0wyKQogICAgIGlwNmZkID0gb3BlbihVRFA2X0RF
Vl9OQU1FLCBPX1JEV1IsIDApOwogICAgIGlmIChpcDZmZCA8IDApCiAJZmF0YWwoIkNvdWxk
bid0IG9wZW4gSVAgZGV2aWNlICgyKTogJW0iKTsKLSNlbmRpZiAvKiBkZWZpbmVkKFBQUF9X
SVRIX0lQVjZDUCkgJiYgZGVmaW5lZChTT0wyKSAqLwogCiAgICAgaWYgKGRlZmF1bHRfZGV2
aWNlICYmICFub3R0eSkKIAl0dHlfc2lkID0gZ2V0c2lkKChwaWRfdCkwKTsKQEAgLTU4Niw3
ICs0NDAsNiBAQCBzeXNfaW5pdCh2b2lkKQogICAgIGlmIChzdHJpb2N0bChwcHBmZCwgUFBQ
SU9fTkVXUFBBLCAmaWZ1bml0LCAwLCBzaXplb2YoaW50KSkgPCAwKQogCWZhdGFsKCJDYW4n
dCBjcmVhdGUgbmV3IFBQUCBpbnRlcmZhY2U6ICVtIik7CiAKLSNpZiBkZWZpbmVkKFNPTDIp
CiAgICAgLyoKICAgICAgKiBTaW5jZSBzeXNfaW5pdCgpIGlzIGNhbGxlZCBwcmlvciB0byBp
Zm5hbWUgYmVpbmcgc2V0IGluIG1haW4oKSwKICAgICAgKiB3ZSBuZWVkIHRvIGdldCB0aGUg
aWZuYW1lIG5vdywgb3RoZXJ3aXNlIHNsaWZuYW1lKCksIGFuZCBvdGhlcnMsCkBAIC01OTQs
NyArNDQ3LDcgQEAgc3lzX2luaXQodm9pZCkKICAgICAgKiA8YWRpLm1hc3B1dHJhQHN1bi5j
b20+CiAgICAgICovCiAgICAgc3ByaW50ZihpZm5hbWUsIFBQUF9EUlZfTkFNRSAiJWQiLCBp
ZnVuaXQpOwotI2VuZGlmIC8qIGRlZmluZWQoU09MMikgKi8KKwogICAgIC8qCiAgICAgICog
T3BlbiB0aGUgcHBwIGRldmljZSBhZ2FpbiBhbmQgbGluayBpdCB1bmRlciB0aGUgaXAgbXVs
dGlwbGV4b3IuCiAgICAgICogSVAgd2lsbCBhc3NpZ24gYSB1bml0IG51bWJlciB3aGljaCBo
b3BlZnVsbHkgaXMgdGhlIHNhbWUgYXMgaWZ1bml0LgpAQCAtNjA4LDcgKzQ2MSw2IEBAIHN5
c19pbml0KHZvaWQpCiAJc3RyaW9jdGwoaWZkLCBQUFBJT19ERUJVRywgJngsIHNpemVvZihp
bnQpLCAwKTsKICAgICB9CiAKLSNpZiBkZWZpbmVkKFBQUF9XSVRIX0lQVjZDUCkgJiYgZGVm
aW5lZChTT0wyKQogICAgIGk2ZmQgPSBvcGVuKFBQUF9ERVZfTkFNRSwgT19SRFdSLCAwKTsK
ICAgICBpZiAoaTZmZCA8IDApIHsKIAljbG9zZShpZmQpOwpAQCAtNjE4LDE0ICs0NzAsMTAg
QEAgc3lzX2luaXQodm9pZCkKIAl4ID0gUFBQREJHX0xPRyArIFBQUERCR19EUklWRVI7CiAJ
c3RyaW9jdGwoaTZmZCwgUFBQSU9fREVCVUcsICZ4LCBzaXplb2YoaW50KSwgMCk7CiAgICAg
fQotI2VuZGlmIC8qIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKSAmJiBkZWZpbmVkKFNPTDIp
ICovCiAKLSNpZiBkZWZpbmVkKFNPTDIpCiAgICAgaWYgKGlvY3RsKGlmZCwgSV9QVVNILCBJ
UF9NT0RfTkFNRSkgPCAwKSB7CiAJY2xvc2UoaWZkKTsKLSNpZiBkZWZpbmVkKFBQUF9XSVRI
X0lQVjZDUCkKIAljbG9zZShpNmZkKTsKLSNlbmRpZiAvKiBkZWZpbmVkKFBQUF9XSVRIX0lQ
VjZDUCkgKi8KIAlmYXRhbCgiQ2FuJ3QgcHVzaCBJUCBtb2R1bGU6ICVtIik7CiAgICAgfQog
CkBAIC02MzUsMTMgKzQ4MywxMCBAQCBzeXNfaW5pdCh2b2lkKQogICAgICAqLwogICAgIGlm
IChzaWZwcGEoaWZkLCBpZnVuaXQpIDwgMCkgewogICAgICAgICBjbG9zZSAoaWZkKTsKLSNp
ZiBkZWZpbmVkKFBQUF9XSVRIX0lQVjZDUCkKIAljbG9zZShpNmZkKTsKLSNlbmRpZiAvKiBk
ZWZpbmVkKFBQUF9XSVRIX0lQVjZDUCkgKi8KICAgICAgICAgZmF0YWwoIkNhbid0IHNldCBw
cGEgZm9yIHVuaXQgJWQ6ICVtIiwgaWZ1bml0KTsKICAgICB9CiAKLSNpZiBkZWZpbmVkKFBQ
UF9XSVRIX0lQVjZDUCkKICAgICAvKgogICAgICAqIEFuIElQdjYgaW50ZXJmYWNlIGlzIGNy
ZWF0ZWQgYW55d2F5LCBldmVuIHdoZW4gdGhlIHVzZXIgZG9lcyBub3QgCiAgICAgICogZXhw
bGljaXRseSBlbmFibGUgaXQuIE5vdGUgdGhhdCB0aGUgaW50ZXJmYWNlIHdpbGwgYmUgbWFy
a2VkCkBAIC02NjMsMTQgKzUwOCwxMSBAQCBzeXNfaW5pdCh2b2lkKQogCWNsb3NlKGk2ZmQp
OwogCWZhdGFsKCJDYW4ndCBzZXQgaWZuYW1lIGZvciB1bml0ICVkOiAlbSIsIGlmdW5pdCk7
CiAgICAgfQotI2VuZGlmIC8qIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKSAqLwogCiAgICAg
aXBtdXhpZCA9IGlvY3RsKGlwZmQsIElfUExJTkssIGlmZCk7CiAgICAgY2xvc2UoaWZkKTsK
ICAgICBpZiAoaXBtdXhpZCA8IDApIHsKLSNpZiBkZWZpbmVkKFBQUF9XSVRIX0lQVjZDUCkK
IAljbG9zZShpNmZkKTsKLSNlbmRpZiAvKiBkZWZpbmVkKFBQUF9XSVRIX0lQVjZDUCkgKi8K
IAlmYXRhbCgiQ2FuJ3QgSV9QTElOSyBQUFAgZGV2aWNlIHRvIElQOiAlbSIpOwogICAgIH0K
IApAQCAtNjg3LDI3ICs1MjksMTAgQEAgc3lzX2luaXQodm9pZCkKICAgICAgKi8KICAgICBp
ZiAoaW9jdGwoaXBmZCwgU0lPQ1NJRk1VWElELCAmaWZyKSA8IDApIHsKIAlpb2N0bChpcGZk
LCBJX1BVTkxJTkssIGlwbXV4aWQpOwotI2lmIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKQog
CWNsb3NlKGk2ZmQpOwotI2VuZGlmIC8qIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKSAqLwog
CWZhdGFsKCJTSU9DU0lGTVVYSUQ6ICVtIik7CiAgICAgfQogCi0jZWxzZSAvKiBlbHNlIGlm
ICFkZWZpbmVkKFNPTDIpICovCi0KLSAgICBpZiAoZGxwaV9hdHRhY2goaWZkLCBpZnVuaXQp
IDwgMCB8fAotCWRscGlfZ2V0X3JlcGx5KGlmZCwgJnJlcGx5LnByaW0sIERMX09LX0FDSywg
c2l6ZW9mKHJlcGx5KSkgPCAwKSB7Ci0JY2xvc2UoaWZkKTsKLQlmYXRhbCgiQ2FuJ3QgYXR0
YWNoIHRvIHBwcCVkOiAlbSIsIGlmdW5pdCk7Ci0gICAgfQotCi0gICAgaXBtdXhpZCA9IGlv
Y3RsKGlwZmQsIElfTElOSywgaWZkKTsKLSAgICBjbG9zZShpZmQpOwotICAgIGlmIChpcG11
eGlkIDwgMCkKLQlmYXRhbCgiQ2FuJ3QgbGluayBQUFAgZGV2aWNlIHRvIElQOiAlbSIpOwot
I2VuZGlmIC8qIGRlZmluZWQoU09MMikgKi8KLQotI2lmIGRlZmluZWQoUFBQX1dJVEhfSVBW
NkNQKSAmJiBkZWZpbmVkKFNPTDIpCiAgICAgaXA2bXV4aWQgPSBpb2N0bChpcDZmZCwgSV9Q
TElOSywgaTZmZCk7CiAgICAgY2xvc2UoaTZmZCk7CiAgICAgaWYgKGlwNm11eGlkIDwgMCkg
ewpAQCAtNzI3LDE1ICs1NTIsNiBAQCBzeXNfaW5pdCh2b2lkKQogCWlvY3RsKGlwNmZkLCBJ
X1BVTkxJTkssIGlwNm11eGlkKTsKIAlmYXRhbCgiQ2FuJ3QgbGluayBQUFAgZGV2aWNlIHRv
IElQICgyKTogJW0iKTsKICAgICB9Ci0jZW5kaWYgLyogZGVmaW5lZChQUFBfV0lUSF9JUFY2
Q1ApICYmIGRlZmluZWQoU09MMikgKi8KLQotI2lmICFkZWZpbmVkKFNPTDIpCi0gICAgLyog
U2V0IHRoZSBpbnRlcmZhY2UgbmFtZSBmb3IgdGhlIGxpbmsuICovCi0gICAgc2xwcmludGYo
aWZyLmlmcl9uYW1lLCBzaXplb2YoaWZyLmlmcl9uYW1lKSwgUFBQX0RSVl9OQU1FICIlZCIs
IGlmdW5pdCk7Ci0gICAgaWZyLmlmcl9tZXRyaWMgPSBpcG11eGlkOwotICAgIGlmIChzdHJp
b2N0bChpcGZkLCBTSU9DU0lGTkFNRSwgKGNoYXIgKikmaWZyLCBzaXplb2YgaWZyLCAwKSA8
IDApCi0JZmF0YWwoIkNhbid0IHNldCBpbnRlcmZhY2UgbmFtZSAlczogJW0iLCBpZnIuaWZy
X25hbWUpOwotI2VuZGlmIC8qICFkZWZpbmVkKFNPTDIpICovCiAKICAgICBuX3BvbGxmZHMg
PSAwOwogfQpAQCAtNzQ4LDE3ICs1NjQsMTEgQEAgc3lzX2luaXQodm9pZCkKIHZvaWQKIHN5
c19jbGVhbnVwKHZvaWQpCiB7Ci0jaWYgZGVmaW5lZChTT0wyKQogICAgIHN0cnVjdCBpZnJl
cSBpZnI7Ci0jaWYgZGVmaW5lZChQUFBfV0lUSF9JUFY2Q1ApCiAgICAgc3RydWN0IGxpZnJl
cSBsaWZyOwotI2VuZGlmIC8qIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKSAqLwotI2VuZGlm
IC8qIGRlZmluZWQoU09MMikgKi8KIAotI2lmIGRlZmluZWQoU09MMikgJiYgZGVmaW5lZChQ
UFBfV0lUSF9JUFY2Q1ApCiAgICAgaWYgKGlmNl9pc191cCkKIAlzaWY2ZG93bigwKTsKLSNl
bmRpZiAvKiBkZWZpbmVkKFNPTDIpICYmIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKSAqLwog
ICAgIGlmIChpZl9pc191cCkKIAlzaWZkb3duKDApOwogICAgIGlmIChkZWZhdWx0X3JvdXRl
X2dhdGV3YXkpCkBAIC03NjcsNyArNTc3LDcgQEAgc3lzX2NsZWFudXAodm9pZCkKIAljaWY2
ZGVmYXVsdHJvdXRlKDAsIGRlZmF1bHRfcm91dGVfZ2F0ZXdheTYsIGRlZmF1bHRfcm91dGVf
Z2F0ZXdheTYpOwogICAgIGlmIChwcm94eV9hcnBfYWRkcikKIAljaWZwcm94eWFycCgwLCBw
cm94eV9hcnBfYWRkcik7Ci0jaWYgZGVmaW5lZChTT0wyKQorCiAgICAgLyoKICAgICAgKiBN
YWtlIHN1cmUgd2UgYXNrIGlwIHdoYXQgdGhlIG11eGlkLCBiZWNhdXNlICdpZmNvbmZpZyBt
b2RsaXN0JyB3aWxsCiAgICAgICogdW5saW5rIGFuZCByZS1saW5rIHRoZSBtb2R1bGVzLCBj
YXVzaW5nIHRoZSBtdXhpZCB0byBjaGFuZ2UuCkBAIC03OTAsNyArNjAwLDcgQEAgc3lzX2Ns
ZWFudXAodm9pZCkKIAllcnJvcigiQ2FuJ3QgSV9QVU5MSU5LIFBQUCBmcm9tIElQOiAlbSIp
OwogCXJldHVybjsKICAgICB9Ci0jaWYgZGVmaW5lZChQUFBfV0lUSF9JUFY2Q1ApCisKICAg
ICAvKgogICAgICAqIE1ha2Ugc3VyZSB3ZSBhc2sgaXAgd2hhdCB0aGUgbXV4aWQsIGJlY2F1
c2UgJ2lmY29uZmlnIG1vZGxpc3QnIHdpbGwKICAgICAgKiB1bmxpbmsgYW5kIHJlLWxpbmsg
dGhlIG1vZHVsZXMsIGNhdXNpbmcgdGhlIG11eGlkIHRvIGNoYW5nZS4KQEAgLTgxMiw4ICs2
MjIsNiBAQCBzeXNfY2xlYW51cCh2b2lkKQogICAgIGlmIChpb2N0bChpcDZmZCwgSV9QVU5M
SU5LLCBpcDZtdXhpZCkgPCAwKSB7CiAJZXJyb3IoIkNhbid0IElfUFVOTElOSyBQUFAgZnJv
bSBJUCAoMik6ICVtIik7CiAgICAgfQotI2VuZGlmIC8qIGRlZmluZWQoUFBQX1dJVEhfSVBW
NkNQKSAqLwotI2VuZGlmIC8qIGRlZmluZWQoU09MMikgKi8KIH0KIAogLyoKQEAgLTgyMyw5
ICs2MzEsNyBAQCB2b2lkCiBwcHBfc3lzX2Nsb3NlKHZvaWQpCiB7CiAgICAgY2xvc2UoaXBm
ZCk7Ci0jaWYgZGVmaW5lZChQUFBfV0lUSF9JUFY2Q1ApICYmIGRlZmluZWQoU09MMikKICAg
ICBjbG9zZShpcDZmZCk7Ci0jZW5kaWYgLyogZGVmaW5lZChQUFBfV0lUSF9JUFY2Q1ApICYm
IGRlZmluZWQoU09MMikgKi8KICAgICBpZiAocHBwZmQgPj0gMCkKIAljbG9zZShwcHBmZCk7
CiB9CkBAIC04MzksMzEgKzY0NSw2IEBAIHN5c19jaGVja19vcHRpb25zKHZvaWQpCiAgICAg
cmV0dXJuIDE7CiB9CiAKLSNpZiAwCi0vKgotICogZGFlbW9uIC0gRGV0YWNoIHVzIGZyb20g
Y29udHJvbGxpbmcgdGVybWluYWwgc2Vzc2lvbi4KLSAqLwotaW50Ci1kYWVtb24oaW50IG5v
Y2hkaXIsIGludCBub2Nsb3NlKQotewotICAgIGludCBwaWQ7Ci0KLSAgICBpZiAoKHBpZCA9
IGZvcmsoKSkgPCAwKQotCXJldHVybiAtMTsKLSAgICBpZiAocGlkICE9IDApCi0JZXhpdCgw
KTsJCS8qIHBhcmVudCBkaWVzICovCi0gICAgc2V0c2lkKCk7Ci0gICAgaWYgKCFub2NoZGly
KQotCWNoZGlyKCIvIik7Ci0gICAgaWYgKCFub2Nsb3NlKSB7Ci0JZmNsb3NlKHN0ZGluKTsJ
CS8qIGRvbid0IG5lZWQgc3RkaW4sIHN0ZG91dCwgc3RkZXJyICovCi0JZmNsb3NlKHN0ZG91
dCk7Ci0JZmNsb3NlKHN0ZGVycik7Ci0gICAgfQotICAgIHJldHVybiAwOwotfQotI2VuZGlm
Ci0KIC8qCiAgKiBwcHBfY2hlY2tfa2VybmVsX3N1cHBvcnQgLSBjaGVjayB3aGV0aGVyIHRo
ZSBzeXN0ZW0gaGFzIGFueSBwcHAgaW50ZXJmYWNlcwogICovCkBAIC0xMTU2LDQ2ICs5Mzcs
MjEgQEAgc2V0X3VwX3R0eShpbnQgZmQsIGludCBsb2NhbCkKIHsKICAgICBpbnQgc3BlZWQ7
CiAgICAgc3RydWN0IHRlcm1pb3MgdGlvczsKLSNpZiAhZGVmaW5lZCAoQ1JUU0NUUykKLSAg
ICBzdHJ1Y3QgdGVybWlveCB0aW94OwotI2VuZGlmCiAKICAgICBpZiAoIXBwcF9zeW5jX3Nl
cmlhbCgpICYmIHRjZ2V0YXR0cihmZCwgJnRpb3MpIDwgMCkKIAlmYXRhbCgidGNnZXRhdHRy
OiAlbSIpOwogCi0jaWZuZGVmIENSVFNDVFMKLSAgICB0ZXJtaW94X29rID0gMTsKLSAgICBp
ZiAoIXBwcF9zeW5jX3NlcmlhbCgpICYmIGlvY3RsIChmZCwgVENHRVRYLCAmdGlveCkgPCAw
KSB7Ci0JdGVybWlveF9vayA9IDA7Ci0JaWYgKGVycm5vICE9IEVOT1RUWSkKLQkgICAgZXJy
b3IoIlRDR0VUWDogJW0iKTsKLSAgICB9Ci0jZW5kaWYKLQogICAgIGlmICghcmVzdG9yZV90
ZXJtKSB7CiAJaW5pdHRlcm1pb3MgPSB0aW9zOwotI2lmbmRlZiBDUlRTQ1RTCi0JaW5pdHRl
cm1pb3ggPSB0aW94OwotI2VuZGlmCiAJaWYgKCFwcHBfc3luY19zZXJpYWwoKSkKIAkgICAg
aW9jdGwoZmQsIFRJT0NHV0lOU1osICZ3c2luZm8pOwogICAgIH0KIAogICAgIHRpb3MuY19j
ZmxhZyAmPSB+KENTSVpFIHwgQ1NUT1BCIHwgUEFSRU5CIHwgQ0xPQ0FMKTsKLSNpZmRlZiBD
UlRTQ1RTCiAgICAgaWYgKGNydHNjdHMgPiAwKQogCXRpb3MuY19jZmxhZyB8PSBDUlRTQ1RT
OwogICAgIGVsc2UgaWYgKGNydHNjdHMgPCAwKQogCXRpb3MuY19jZmxhZyAmPSB+Q1JUU0NU
UzsKLSNlbHNlCi0gICAgaWYgKGNydHNjdHMgIT0gMCAmJiAhdGVybWlveF9vaykgewotCWVy
cm9yKCJDYW4ndCBzZXQgUlRTL0NUUyBmbG93IGNvbnRyb2wiKTsKLSAgICB9IGVsc2UgaWYg
KGNydHNjdHMgPiAwKSB7Ci0JdGlveC54X2hmbGFnIHw9IFJUU1hPRkZ8Q1RTWE9OOwotICAg
IH0gZWxzZSBpZiAoY3J0c2N0cyA8IDApIHsKLQl0aW94LnhfaGZsYWcgJj0gfihSVFNYT0ZG
fENUU1hPTik7Ci0gICAgfQotI2VuZGlmCiAKICAgICBpZiAoc3RvcF9iaXRzID49IDIpCiAJ
dGlvcy5jX2NmbGFnIHw9IENTVE9QQjsKQEAgLTEyMzIsMTIgKzk4OCw2IEBAIHNldF91cF90
dHkoaW50IGZkLCBpbnQgbG9jYWwpCiAgICAgaWYgKCFwcHBfc3luY19zZXJpYWwoKSAmJiB0
Y3NldGF0dHIoZmQsIFRDU0FGTFVTSCwgJnRpb3MpIDwgMCkKIAlmYXRhbCgidGNzZXRhdHRy
OiAlbSIpOwogCi0jaWZuZGVmIENSVFNDVFMKLSAgICBpZiAoIXBwcF9zeW5jX3NlcmlhbCgp
ICYmIHRlcm1pb3hfb2sgJiYgaW9jdGwgKGZkLCBUQ1NFVFhGLCAmdGlveCkgPCAwKXsKLQll
cnJvcigiVENTRVRYRjogJW0iKTsKLSAgICB9Ci0jZW5kaWYKLQogICAgIGJhdWRfcmF0ZSA9
IGluc3BlZWQgPSBiYXVkX3JhdGVfb2Yoc3BlZWQpOwogICAgIGlmICghcHBwX3N5bmNfc2Vy
aWFsKCkpCiAJcmVzdG9yZV90ZXJtID0gMTsKQEAgLTEyNjIsMTIgKzEwMTIsNiBAQCByZXN0
b3JlX3R0eShpbnQgZmQpCiAJaWYgKCFwcHBfc3luY19zZXJpYWwoKSAmJiB0Y3NldGF0dHIo
ZmQsIFRDU0FGTFVTSCwgJmluaXR0ZXJtaW9zKSA8IDApCiAJICAgIGlmICghaHVuZ3VwICYm
IGVycm5vICE9IEVOWElPKQogCQl3YXJuKCJ0Y3NldGF0dHI6ICVtIik7Ci0jaWZuZGVmIENS
VFNDVFMKLQlpZiAoIXBwcF9zeW5jX3NlcmlhbCgpICYmIGlvY3RsIChmZCwgVENTRVRYRiwg
JmluaXR0ZXJtaW94KSA8IDApewotCSAgICBpZiAoIWh1bmd1cCAmJiBlcnJubyAhPSBFTlhJ
TykKLQkJZXJyb3IoIlRDU0VUWEY6ICVtIik7Ci0JfQotI2VuZGlmCiAJaWYgKCFwcHBfc3lu
Y19zZXJpYWwoKSkKIAkgICAgaW9jdGwoZmQsIFRJT0NTV0lOU1osICZ3c2luZm8pOwogCXJl
c3RvcmVfdGVybSA9IDA7CkBAIC0xMzc2LDM0ICsxMTIwLDYgQEAgdm9pZCByZW1vdmVfZmQo
aW50IGZkKQogICAgIH0KIH0KIAotI2lmIDAKLS8qCi0gKiB3YWl0X2xvb3Bfb3V0cHV0IC0g
d2FpdCB1bnRpbCB0aGVyZSBpcyBkYXRhIGF2YWlsYWJsZSBvbiB0aGUKLSAqIGxvb3BiYWNr
LCBmb3IgdGhlIGxlbmd0aCBvZiB0aW1lIHNwZWNpZmllZCBieSAqdGltbyAoaW5kZWZpbml0
ZQotICogaWYgdGltbyBpcyBOVUxMKS4KLSAqLwotdm9pZAotd2FpdF9sb29wX291dHB1dChz
dHJ1Y3QgdGltZXZhbCAqdGltbykKLXsKLSAgICB3YWl0X2lucHV0KHRpbW8pOwotfQotCi0v
KgotICogd2FpdF90aW1lIC0gd2FpdCBmb3IgYSBnaXZlbiBsZW5ndGggb2YgdGltZSBvciB1
bnRpbCBhCi0gKiBzaWduYWwgaXMgcmVjZWl2ZWQuCi0gKi8KLXZvaWQKLXdhaXRfdGltZShz
dHJ1Y3QgdGltZXZhbCAqdGltbykKLXsKLSAgICBpbnQgbjsKLQotICAgIG4gPSBzZWxlY3Qo
MCwgTlVMTCwgTlVMTCwgTlVMTCwgdGltbyk7Ci0gICAgaWYgKG4gPCAwICYmIGVycm5vICE9
IEVJTlRSKQotCWZhdGFsKCJzZWxlY3Q6ICVtIik7Ci19Ci0jZW5kaWYKLQotCiAvKgogICog
cmVhZF9wYWNrZXQgLSBnZXQgYSBQUFAgcGFja2V0IGZyb20gdGhlIHNlcmlhbCBkZXZpY2Uu
CiAgKi8KQEAgLTE0MzQsNyArMTE1MCw3IEBAIHJlYWRfcGFja2V0KHVfY2hhciAqYnVmKQog
CSAqIEdvdCBhIE1fUFJPVE8gb3IgTV9QQ1BST1RPIG1lc3NhZ2UuICBJbnRlcnByZXQgaXQK
IAkgKiBhcyBhIERMUEkgcHJpbWl0aXZlPz8KIAkgKi8KLQlpZiAoZGVidWcpCisJaWYgKGRl
YnVnICYmICgodW5pb24gRExfcHJpbWl0aXZlcyAqKWN0cmxidWYpLT5kbF9wcmltaXRpdmUg
IT0gMHg1MzUwNTA1MCkKIAkgICAgZGJnbG9nKCJnb3QgZGxwaSBwcmltIDB4JXgsIGxlbj0l
ZCIsCiAJCSAgICgodW5pb24gRExfcHJpbWl0aXZlcyAqKWN0cmxidWYpLT5kbF9wcmltaXRp
dmUsIGN0cmwubGVuKTsKIApAQCAtMTQ2NiwxMCArMTE4Miw4IEBAIHZvaWQKIHBwcF9zZXRf
bXR1KGludCB1bml0LCBpbnQgbXR1KQogewogICAgIHN0cnVjdCBpZnJlcSBpZnI7Ci0jaWYg
ZGVmaW5lZChQUFBfV0lUSF9JUFY2Q1ApICYmIGRlZmluZWQoU09MMikKICAgICBzdHJ1Y3Qg
bGlmcmVxIGxpZnI7CiAgICAgaW50CWZkOwotI2VuZGlmIC8qIGRlZmluZWQoUFBQX1dJVEhf
SVBWNkNQKSAmJiBkZWZpbmVkKFNPTDIpICovCiAKICAgICBtZW1zZXQoJmlmciwgMCwgc2l6
ZW9mKGlmcikpOwogICAgIHN0cmxjcHkoaWZyLmlmcl9uYW1lLCBpZm5hbWUsIHNpemVvZihp
ZnIuaWZyX25hbWUpKTsKQEAgLTE0NzgsNyArMTE5Miw2IEBAIHBwcF9zZXRfbXR1KGludCB1
bml0LCBpbnQgbXR1KQogCWVycm9yKCJDb3VsZG4ndCBzZXQgSVAgTVRVICglcyk6ICVtIiwg
aWZyLmlmcl9uYW1lKTsKICAgICB9CiAKLSNpZiBkZWZpbmVkKFBQUF9XSVRIX0lQVjZDUCkg
JiYgZGVmaW5lZChTT0wyKQogICAgIGZkID0gc29ja2V0KEFGX0lORVQ2LCBTT0NLX0RHUkFN
LCAwKTsKICAgICBpZiAoZmQgPCAwKQogCWVycm9yKCJDb3VsZG4ndCBvcGVuIElQdjYgc29j
a2V0OiAlbSIpOwpAQCAtMTQ5MSw3ICsxMjA0LDYgQEAgcHBwX3NldF9tdHUoaW50IHVuaXQs
IGludCBtdHUpCiAJZXJyb3IoIkNvdWxkbid0IHNldCBJUHY2IE1UVSAoJXMpOiAlbSIsIGlm
ci5pZnJfbmFtZSk7CiAgICAgfQogICAgIGNsb3NlKGZkKTsKLSNlbmRpZiAvKiBkZWZpbmVk
KFBQUF9XSVRIX0lQVjZDUCkgJiYgZGVmaW5lZChTT0wyKSAqLwogfQogCiAKQEAgLTE2MzQs
MTAgKzEzNDYsMTAgQEAgZ2V0X2lkbGVfdGltZShpbnQgdSwgc3RydWN0IHBwcF9pZGxlICpp
cCkKIGludAogZ2V0X3BwcF9zdGF0cyhpbnQgdSwgc3RydWN0IHBwcGRfc3RhdHMgKnN0YXRz
KQogewotICAgIHN0cnVjdCBwcHBfc3RhdHMgczsKKyAgICBzdHJ1Y3QgcHBwX3N0YXRzNjQg
czsKIAogICAgIGlmICghcHBwX3N5bmNfc2VyaWFsKCkgJiYKLQlzdHJpb2N0bChwcHBmZCwg
UFBQSU9fR0VUU1RBVCwgJnMsIDAsIHNpemVvZihzKSkgPCAwKSB7CisJc3RyaW9jdGwocHBw
ZmQsIFBQUElPX0dFVFNUQVQ2NCwgJnMsIDAsIHNpemVvZihzKSkgPCAwKSB7CiAJZXJyb3Io
IkNvdWxkbid0IGdldCBsaW5rIHN0YXRpc3RpY3M6ICVtIik7CiAJcmV0dXJuIDA7CiAgICAg
fQpAQCAtMTc1OCw3ICsxNDcwLDYgQEAgc2lmbnBtb2RlKGludCB1LCBpbnQgcHJvdG8sIGVu
dW0gTlBtb2RlIG1vZGUpCiAgICAgcmV0dXJuIDE7CiB9CiAKLSNpZiBkZWZpbmVkKFNPTDIp
ICYmIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKQogLyoKICAqIHNpZjZ1cCAtIENvbmZpZyB0
aGUgSVB2NiBpbnRlcmZhY2UgdXAgYW5kIGVuYWJsZSBJUHY2IHBhY2tldHMgdG8gcGFzcy4K
ICAqLwpAQCAtMTk0Miw5ICsxNjUzLDYgQEAgY2lmNmRlZmF1bHRyb3V0ZShpbnQgdSwgZXVp
NjRfdCBsLCBldWk2NF90IGcpCiAgICAgcmV0dXJuIDE7CiB9CiAKLSNlbmRpZiAvKiBkZWZp
bmVkKFNPTDIpICYmIGRlZmluZWQoUFBQX1dJVEhfSVBWNkNQKSAqLwotCi0KICNkZWZpbmUg
SU5FVF9BRERSKHgpCSgoKHN0cnVjdCBzb2NrYWRkcl9pbiAqKSAmKHgpKS0+c2luX2FkZHIu
c19hZGRyKQogCiAvKgpAQCAtMjEzNiw5ICsxODQ0LDcgQEAgZ2V0X2V0aGVyX2FkZHIodV9p
bnQzMl90IGlwYWRkciwgc3RydWN0IHNvY2thZGRyICpod2FkZHIpCiAgICAgLyoKICAgICAg
KiBTY2FuIHRocm91Z2ggdGhlIHN5c3RlbSdzIG5ldHdvcmsgaW50ZXJmYWNlcy4KICAgICAg
Ki8KLSNpZmRlZiBTSU9DR0lGTlVNCiAgICAgaWYgKGlvY3RsKGlwZmQsIFNJT0NHSUZOVU0s
ICZuaWYpIDwgMCkKLSNlbmRpZgogCW5pZiA9IE1BWF9JRlM7CiAgICAgaWZjLmlmY19sZW4g
PSBuaWYgKiBzaXplb2Yoc3RydWN0IGlmcmVxKTsKICAgICBpZmMuaWZjX2J1ZiA9IChjYWRk
cl90KSBtYWxsb2MoaWZjLmlmY19sZW4pOwpAQCAtMjIzNiwxMiArMTk0MiwxMCBAQCBnZXRf
aHdfYWRkcl9kbHBpKGNoYXIgKm5hbWUsIHN0cnVjdCBzb2NrYWRkciAqaHdhZGRyKQogICAg
IGFkcmxlbiA9IHJlcGx5LnByaW0uaW5mb19hY2suZGxfYWRkcl9sZW5ndGg7CiAgICAgYWRy
cCA9ICh1bnNpZ25lZCBjaGFyICopJnJlcGx5ICsgcmVwbHkucHJpbS5pbmZvX2Fjay5kbF9h
ZGRyX29mZnNldDsKIAotI2lmIERMX0NVUlJFTlRfVkVSU0lPTiA+PSAyCiAgICAgaWYgKHJl
cGx5LnByaW0uaW5mb19hY2suZGxfc2FwX2xlbmd0aCA8IDApCiAJYWRybGVuICs9IHJlcGx5
LnByaW0uaW5mb19hY2suZGxfc2FwX2xlbmd0aDsKICAgICBlbHNlCiAJYWRycCArPSByZXBs
eS5wcmltLmluZm9fYWNrLmRsX3NhcF9sZW5ndGg7Ci0jZW5kaWYKIAogICAgIGh3YWRkci0+
c2FfZmFtaWx5ID0gQUZfVU5TUEVDOwogICAgIG1lbWNweShod2FkZHItPnNhX2RhdGEsIGFk
cnAsIGFkcmxlbik7CkBAIC0yNDgxLDg1ICsyMTg1LDYgQEAgc3RyaW9jdGwoaW50IGZkLCBp
bnQgY21kLCB2b2lkICpwdHIsIGludCBpbGVuLCBpbnQgb2xlbikKICAgICByZXR1cm4gMDsK
IH0KIAotI2lmIDAKLS8qCi0gKiBsb2NrIC0gY3JlYXRlIGEgbG9jayBmaWxlIGZvciB0aGUg
bmFtZWQgbG9jayBkZXZpY2UKLSAqLwotCi0jZGVmaW5lIExPQ0tfUFJFRklYCSIvdmFyL3Nw
b29sL2xvY2tzL0xLLiIKLXN0YXRpYyBjaGFyIGxvY2tfZmlsZVs0MF07CS8qIG5hbWUgb2Yg
bG9jayBmaWxlIGNyZWF0ZWQgKi8KLQotaW50Ci1sb2NrKGNoYXIgKmRldikKLXsKLSAgICBp
bnQgbiwgZmQsIHBpZDsKLSAgICBzdHJ1Y3Qgc3RhdCBzYnVmOwotICAgIGNoYXIgYXNjaWlf
cGlkWzEyXTsKLQotICAgIGlmIChzdGF0KGRldiwgJnNidWYpIDwgMCkgewotCWVycm9yKCJD
YW4ndCBnZXQgZGV2aWNlIG51bWJlciBmb3IgJXM6ICVtIiwgZGV2KTsKLQlyZXR1cm4gLTE7
Ci0gICAgfQotICAgIGlmICgoc2J1Zi5zdF9tb2RlICYgU19JRk1UKSAhPSBTX0lGQ0hSKSB7
Ci0JZXJyb3IoIkNhbid0IGxvY2sgJXM6IG5vdCBhIGNoYXJhY3RlciBkZXZpY2UiLCBkZXYp
OwotCXJldHVybiAtMTsKLSAgICB9Ci0gICAgc2xwcmludGYobG9ja19maWxlLCBzaXplb2Yo
bG9ja19maWxlKSwgIiVzJTAzZC4lMDNkLiUwM2QiLAotCSAgICAgTE9DS19QUkVGSVgsIG1h
am9yKHNidWYuc3RfZGV2KSwKLQkgICAgIG1ham9yKHNidWYuc3RfcmRldiksIG1pbm9yKHNi
dWYuc3RfcmRldikpOwotCi0gICAgd2hpbGUgKChmZCA9IG9wZW4obG9ja19maWxlLCBPX0VY
Q0wgfCBPX0NSRUFUIHwgT19SRFdSLCAwNjQ0KSkgPCAwKSB7Ci0JaWYgKGVycm5vID09IEVF
WElTVAotCSAgICAmJiAoZmQgPSBvcGVuKGxvY2tfZmlsZSwgT19SRE9OTFksIDApKSA+PSAw
KSB7Ci0JICAgIC8qIFJlYWQgdGhlIGxvY2sgZmlsZSB0byBmaW5kIG91dCB3aG8gaGFzIHRo
ZSBkZXZpY2UgbG9ja2VkICovCi0JICAgIG4gPSByZWFkKGZkLCBhc2NpaV9waWQsIDExKTsK
LQkgICAgaWYgKG4gPD0gMCkgewotCQllcnJvcigiQ2FuJ3QgcmVhZCBwaWQgZnJvbSBsb2Nr
IGZpbGUgJXMiLCBsb2NrX2ZpbGUpOwotCQljbG9zZShmZCk7Ci0JICAgIH0gZWxzZSB7Ci0J
CWFzY2lpX3BpZFtuXSA9IDA7Ci0JCXBpZCA9IGF0b2koYXNjaWlfcGlkKTsKLQkJaWYgKHBp
ZCA+IDAgJiYga2lsbChwaWQsIDApID09IC0xICYmIGVycm5vID09IEVTUkNIKSB7Ci0JCSAg
ICAvKiBwaWQgbm8gbG9uZ2VyIGV4aXN0cyAtIHJlbW92ZSB0aGUgbG9jayBmaWxlICovCi0J
CSAgICBpZiAodW5saW5rKGxvY2tfZmlsZSkgPT0gMCkgewotCQkJY2xvc2UoZmQpOwotCQkJ
bm90aWNlKCJSZW1vdmVkIHN0YWxlIGxvY2sgb24gJXMgKHBpZCAlZCkiLAotCQkJICAgICAg
IGRldiwgcGlkKTsKLQkJCWNvbnRpbnVlOwotCQkgICAgfSBlbHNlCi0JCQl3YXJuKCJDb3Vs
ZG4ndCByZW1vdmUgc3RhbGUgbG9jayBvbiAlcyIsCi0JCQkgICAgICAgZGV2KTsKLQkJfSBl
bHNlCi0JCSAgICBub3RpY2UoIkRldmljZSAlcyBpcyBsb2NrZWQgYnkgcGlkICVkIiwKLQkJ
CSAgIGRldiwgcGlkKTsKLQkgICAgfQotCSAgICBjbG9zZShmZCk7Ci0JfSBlbHNlCi0JICAg
IGVycm9yKCJDYW4ndCBjcmVhdGUgbG9jayBmaWxlICVzOiAlbSIsIGxvY2tfZmlsZSk7Ci0J
bG9ja19maWxlWzBdID0gMDsKLQlyZXR1cm4gLTE7Ci0gICAgfQotCi0gICAgc2xwcmludGYo
YXNjaWlfcGlkLCBzaXplb2YoYXNjaWlfcGlkKSwgIiUxMGRcbiIsIGdldHBpZCgpKTsKLSAg
ICB3cml0ZShmZCwgYXNjaWlfcGlkLCAxMSk7Ci0KLSAgICBjbG9zZShmZCk7Ci0gICAgcmV0
dXJuIDE7Ci19Ci0KLS8qCi0gKiB1bmxvY2sgLSByZW1vdmUgb3VyIGxvY2tmaWxlCi0gKi8K
LXZvaWQKLXVubG9jayh2b2lkKQotewotICAgIGlmIChsb2NrX2ZpbGVbMF0pIHsKLQl1bmxp
bmsobG9ja19maWxlKTsKLQlsb2NrX2ZpbGVbMF0gPSAwOwotICAgIH0KLX0KLSNlbmRpZgot
CiAvKgogICogY2lmcm91dGUgLSBkZWxldGUgYSByb3V0ZSB0aHJvdWdoIHRoZSBhZGRyZXNz
ZXMgZ2l2ZW4uCiAgKi8KQEAgLTI1OTcsNyArMjIyMiw2IEBAIGNpZnJvdXRlKGludCB1LCB1
X2ludDMyX3Qgb3VyLCB1X2ludDMyX3QgaGlzKQogaW50CiBoYXZlX3JvdXRlX3RvKHVfaW50
MzJfdCBhZGRyKQogewotI2lmZGVmIFNPTDIKICAgICBpbnQgZmQsIHIsIGZsYWdzLCBpOwog
ICAgIHN0cnVjdCB7CiAJc3RydWN0IFRfb3B0bWdtdF9yZXEgcmVxOwpAQCAtMjY3Myw3ICsy
Mjk3LDcgQEAgaGF2ZV9yb3V0ZV90byh1X2ludDMyX3QgYWRkcikKIAkgICAgbnJvdXRlcyA9
IGRidWYubGVuIC8gc2l6ZW9mKG1pYjJfaXBSb3V0ZUVudHJ5X3QpOwogCSAgICBmb3IgKHJw
ID0gcm91dGVzLCBpID0gMDsgaSA8IG5yb3V0ZXM7ICsraSwgKytycCkgewogCQlpZiAocnAt
PmlwUm91dGVNYXNrICE9IH4wKSB7Ci0JCSAgICBkYmdsb2coImhhdmVfcm91dGVfdG86IGRl
c3Q9JXggZ3c9JXggbWFzaz0leFxuIiwKKwkJICAgIGRiZ2xvZygiaGF2ZV9yb3V0ZV90bzog
ZGVzdD0lSSBndz0lSSBtYXNrPSVJIiwKIAkJCSAgIHJwLT5pcFJvdXRlRGVzdCwgcnAtPmlw
Um91dGVOZXh0SG9wLAogCQkJICAgcnAtPmlwUm91dGVNYXNrKTsKIAkJICAgIGlmICgoKGFk
ZHIgXiBycC0+aXBSb3V0ZURlc3QpICYgcnAtPmlwUm91dGVNYXNrKSA9PSAwCkBAIC0yNjg4
LDkgKzIzMTIsNiBAQCBoYXZlX3JvdXRlX3RvKHVfaW50MzJfdCBhZGRyKQogICAgIH0KICAg
ICBjbG9zZShmZCk7CiAgICAgcmV0dXJuIDA7Ci0jZWxzZQotICAgIHJldHVybiAtMTsKLSNl
bmRpZiAvKiBTT0wyICovCiB9CiAKIC8qCg==

--------------0950FvPPIyqbXUE0TK4CR5r1--

